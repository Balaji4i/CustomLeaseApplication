package custom.lease.model.View;

import java.math.BigDecimal;

import java.sql.ResultSet;

import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 02 14:43:00 IST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxplCancellationCharge_VOImpl extends ViewObjectImpl {
    
    private BigDecimal chargeSumAmt = new BigDecimal(0);
    private BigDecimal taxSumAmt = new BigDecimal(0);
    private BigDecimal TotalSumAmt = new BigDecimal(0);
    private BigDecimal TotalDueAmt = new BigDecimal(0);
    private BigDecimal TotalNetAmt = new BigDecimal(0);
    
    /**
     * This is the default constructor (do not remove).
     */
    public XxplCancellationCharge_VOImpl() {
    } 

    public void setChargeSumAmt(BigDecimal chargeSumAmt) {
        this.chargeSumAmt = chargeSumAmt;
    }

    public BigDecimal getChargeSumAmt() {
        String chargeName;
        chargeSumAmt = new BigDecimal(0);
        RowSetIterator itr = getViewObject().createRowSetIterator(null);
        while(itr.hasNext()){
            XxplCancellationCharge_VORowImpl row = (XxplCancellationCharge_VORowImpl) itr.next();
            chargeName = row.getChargeName(); 
            if("RENT_INCOME_DAY_CONSUM".equals(chargeName) || 
               "TWO_MONTH_PENALTY".equals(chargeName) || 
               "CHEQUE_WITHDRA_FEE".equals(chargeName)||
                "ACCESS_CARD".equals(chargeName)
            ){
                BigDecimal amt = row.getAmount()!=null?row.getAmount():new BigDecimal(0);
                if(amt!=null){ 
                    chargeSumAmt = chargeSumAmt.add(amt);
            }}
        } 
        itr.reset();
        itr.closeRowSetIterator();
        return chargeSumAmt;
    }

    public void setTaxSumAmt(BigDecimal taxSumAmt) {
        this.taxSumAmt = taxSumAmt;
    }

    public BigDecimal getTaxSumAmt() {
        String chargeName;
        taxSumAmt = new BigDecimal(0);
        RowSetIterator itr = getViewObject().createRowSetIterator(null);
        while(itr.hasNext()){
            XxplCancellationCharge_VORowImpl row = (XxplCancellationCharge_VORowImpl) itr.next();
            chargeName = row.getChargeName(); 
            if("RENT_INCOME_DAY_CONSUM".equals(chargeName) || 
               "TWO_MONTH_PENALTY".equals(chargeName) ||
                "CHEQUE_WITHDRA_FEE".equals(chargeName)||
                "ACCESS_CARD".equals(chargeName)){
                BigDecimal amt = row.getVatAmount()!=null?row.getVatAmount():new BigDecimal(0);
                if(amt!=null){ 
                    taxSumAmt = taxSumAmt.add(amt);
            }}
        } 
        itr.reset();
        itr.closeRowSetIterator();
        return taxSumAmt;
    }

    public void setTotalSumAmt(BigDecimal TotalSumAmt) {
        this.TotalSumAmt = TotalSumAmt;
    }

    public BigDecimal getTotalSumAmt() {
        String chargeName;
        TotalSumAmt = new BigDecimal(0);
        RowSetIterator itr = getViewObject().createRowSetIterator(null);
        while(itr.hasNext()){
            XxplCancellationCharge_VORowImpl row = (XxplCancellationCharge_VORowImpl) itr.next();
            chargeName = row.getChargeName(); 
            if(
            "RENT_INCOME_DAY_CONSUM".equals(chargeName) || 
            "TWO_MONTH_PENALTY".equals(chargeName) || 
            "CHEQUE_WITHDRA_FEE".equals(chargeName)||
            "ACCESS_CARD".equals(chargeName)
            ){
                BigDecimal amt = row.getTotalAmount()!=null?row.getTotalAmount():new BigDecimal(0);
                if(amt!=null){ 
                    TotalSumAmt = TotalSumAmt.add(amt);
            }}
        } 
        itr.reset();
        itr.closeRowSetIterator();
        return TotalSumAmt;
    }
    
    public BigDecimal getTotalDueAmt() {
        String chargeName;
        BigDecimal checkAmt = new BigDecimal(0);
        BigDecimal totalAmt = new BigDecimal(0);
        TotalDueAmt = new BigDecimal(0);
        RowSetIterator itr = getViewObject().createRowSetIterator(null); 
        while(itr.hasNext()){
            XxplCancellationCharge_VORowImpl row = (XxplCancellationCharge_VORowImpl) itr.next();
            chargeName = row.getChargeName(); 
            if("CHEQUE_CLEARED".equals(chargeName)){
                BigDecimal amt = row.getTotalAmount()!=null?row.getTotalAmount():new BigDecimal(0);
                if(amt!=null){ 
                    checkAmt = checkAmt.add(amt);
            }}
        } 
        totalAmt = this.getTotalSumAmt();
        TotalDueAmt = totalAmt.subtract(checkAmt);
        itr.reset();
        itr.closeRowSetIterator();
        return TotalDueAmt;
    }

    public void setTotalDueAmt(BigDecimal TotalDueAmt) {
        this.TotalDueAmt = TotalDueAmt;
    } 
    
    public BigDecimal getTotalNetDueAmt() {
        String chargeName;
        BigDecimal dueAmt = new BigDecimal(0);
        BigDecimal waveAmt = new BigDecimal(0);
        TotalNetAmt = new BigDecimal(0);
        RowSetIterator itr = getViewObject().createRowSetIterator(null); 
        while(itr.hasNext()){
            XxplCancellationCharge_VORowImpl row = (XxplCancellationCharge_VORowImpl) itr.next();
            chargeName = row.getChargeName(); 
//            if("DUE".equals(chargeName)){
//                BigDecimal dAmt = row.getTotalAmount()!=null?row.getTotalAmount():new BigDecimal(0);
//                if(dAmt!=null){ 
//                    dueAmt = dueAmt.add(dAmt);
//            }}
            if("DUE_TAB2".equals(chargeName)){
                BigDecimal dAmt = row.getTotalAmount()!=null?row.getTotalAmount():new BigDecimal(0);
                if(dAmt!=null){ 
                    dueAmt = dueAmt.add(dAmt);
            }}
            
            if("AMOUNT_WAIVED".equals(chargeName)){
                BigDecimal wAmt = row.getTotalAmount()!=null?row.getTotalAmount():new BigDecimal(0);
                if(wAmt!=null){ 
                    waveAmt = waveAmt.add(wAmt);
            }}
        } 
        TotalNetAmt = dueAmt.subtract(waveAmt);
        itr.reset();
        itr.closeRowSetIterator();
        return TotalNetAmt;
    }
}
