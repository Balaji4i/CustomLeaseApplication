package custom.lease.model.View;

import custom.lease.model.Entity.XxplPlLinesEOImpl;

import java.math.BigDecimal;

import java.sql.Date;
import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Apr 10 00:15:47 IST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxplLineVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ActiveYn {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getActiveYn();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setActiveYn((String)value);
            }
        }
        ,
        Attribute1 {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getAttribute1();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute10 {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getAttribute10();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAttribute10((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getAttribute2();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getAttribute3();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getAttribute4();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getAttribute5();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        Attribute6 {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getAttribute6();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAttribute6((String)value);
            }
        }
        ,
        Attribute7 {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getAttribute7();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAttribute7((String)value);
            }
        }
        ,
        Attribute8 {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getAttribute8();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAttribute8((String)value);
            }
        }
        ,
        Attribute9 {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getAttribute9();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAttribute9((String)value);
            }
        }
        ,
        AttributeCategory {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getAttributeCategory();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAttributeCategory((String)value);
            }
        }
        ,
        BasePrice {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getBasePrice();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setBasePrice((BigDecimal)value);
            }
        }
        ,
        BuildId {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getBuildId();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setBuildId((BigDecimal)value);
            }
        }
        ,
        CreatedBy {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setCreationDate((Timestamp)value);
            }
        }
        ,
        EjariPaymentCharge {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getEjariPaymentCharge();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setEjariPaymentCharge((BigDecimal)value);
            }
        }
        ,
        ElectricityCharges {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getElectricityCharges();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setElectricityCharges((BigDecimal)value);
            }
        }
        ,
        EndDate {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getEndDate();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setEndDate((Date)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setLastUpdateDate((Timestamp)value);
            }
        }
        ,
        LastUpdateLogin {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getLastUpdateLogin();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setLastUpdateLogin((String)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        MinPrice {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getMinPrice();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setMinPrice((BigDecimal)value);
            }
        }
        ,
        MunicipalityCharges {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getMunicipalityCharges();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setMunicipalityCharges((BigDecimal)value);
            }
        }
        ,
        ObjectVersion {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getObjectVersion();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setObjectVersion((BigDecimal)value);
            }
        }
        ,
        PlAmount {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getPlAmount();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setPlAmount((BigDecimal)value);
            }
        }
        ,
        PlId {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getPlId();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setPlId((BigDecimal)value);
            }
        }
        ,
        PllId {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getPllId();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setPllId((Number)value);
            }
        }
        ,
        PropertyId {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getPropertyId();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setPropertyId((BigDecimal)value);
            }
        }
        ,
        RevisedBy {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getRevisedBy();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setRevisedBy((String)value);
            }
        }
        ,
        RevisionDate {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getRevisionDate();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setRevisionDate((Date)value);
            }
        }
        ,
        RevisionNo {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getRevisionNo();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setRevisionNo((BigDecimal)value);
            }
        }
        ,
        SecurityDeposite {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getSecurityDeposite();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setSecurityDeposite((BigDecimal)value);
            }
        }
        ,
        StartDate {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getStartDate();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setStartDate((Date)value);
            }
        }
        ,
        UnitId {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getUnitId();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setUnitId((Number)value);
            }
        }
        ,
        Uom {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getUom();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setUom((String)value);
            }
        }
        ,
        UnitTTypeTrans {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getUnitTTypeTrans();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setUnitTTypeTrans((String)value);
            }
        }
        ,
        UnitNameTrans {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getUnitNameTrans();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setUnitNameTrans((String)value);
            }
        }
        ,
        AreaSqFtTrans {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getAreaSqFtTrans();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAreaSqFtTrans((BigDecimal)value);
            }
        }
        ,
        AdminFee {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getAdminFee();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAdminFee((BigDecimal)value);
            }
        }
        ,
        OtherCharge {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getOtherCharge();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setOtherCharge((BigDecimal)value);
            }
        }
        ,
        XxplHeader {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getXxplHeader();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XxplOtherCharges {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getXxplOtherCharges();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SearchUnitFilterROVO {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getSearchUnitFilterROVO();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SearchPropertyFilterROVO {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getSearchPropertyFilterROVO();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SearchUnitFilterROVA_E {
            public Object get(XxplLineVORowImpl obj) {
                return obj.getSearchUnitFilterROVA_E();
            }

            public void put(XxplLineVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxplLineVORowImpl object);

        public abstract void put(XxplLineVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ACTIVEYN = AttributesEnum.ActiveYn.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTECATEGORY = AttributesEnum.AttributeCategory.index();
    public static final int BASEPRICE = AttributesEnum.BasePrice.index();
    public static final int BUILDID = AttributesEnum.BuildId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int EJARIPAYMENTCHARGE = AttributesEnum.EjariPaymentCharge.index();
    public static final int ELECTRICITYCHARGES = AttributesEnum.ElectricityCharges.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int MINPRICE = AttributesEnum.MinPrice.index();
    public static final int MUNICIPALITYCHARGES = AttributesEnum.MunicipalityCharges.index();
    public static final int OBJECTVERSION = AttributesEnum.ObjectVersion.index();
    public static final int PLAMOUNT = AttributesEnum.PlAmount.index();
    public static final int PLID = AttributesEnum.PlId.index();
    public static final int PLLID = AttributesEnum.PllId.index();
    public static final int PROPERTYID = AttributesEnum.PropertyId.index();
    public static final int REVISEDBY = AttributesEnum.RevisedBy.index();
    public static final int REVISIONDATE = AttributesEnum.RevisionDate.index();
    public static final int REVISIONNO = AttributesEnum.RevisionNo.index();
    public static final int SECURITYDEPOSITE = AttributesEnum.SecurityDeposite.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int UNITID = AttributesEnum.UnitId.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int UNITTTYPETRANS = AttributesEnum.UnitTTypeTrans.index();
    public static final int UNITNAMETRANS = AttributesEnum.UnitNameTrans.index();
    public static final int AREASQFTTRANS = AttributesEnum.AreaSqFtTrans.index();
    public static final int ADMINFEE = AttributesEnum.AdminFee.index();
    public static final int OTHERCHARGE = AttributesEnum.OtherCharge.index();
    public static final int XXPLHEADER = AttributesEnum.XxplHeader.index();
    public static final int XXPLOTHERCHARGES = AttributesEnum.XxplOtherCharges.index();
    public static final int SEARCHUNITFILTERROVO = AttributesEnum.SearchUnitFilterROVO.index();
    public static final int SEARCHPROPERTYFILTERROVO = AttributesEnum.SearchPropertyFilterROVO.index();
    public static final int SEARCHUNITFILTERROVA_E = AttributesEnum.SearchUnitFilterROVA_E.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxplLineVORowImpl() {
    }

    /**
     * Gets XxplPlLinesEO entity object.
     * @return the XxplPlLinesEO
     */
    public XxplPlLinesEOImpl getXxplPlLinesEO() {
        return (XxplPlLinesEOImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ACTIVE_YN using the alias name ActiveYn.
     * @return the ACTIVE_YN
     */
    public String getActiveYn() {
        return (String) getAttributeInternal(ACTIVEYN);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIVE_YN using the alias name ActiveYn.
     * @param value value to set the ACTIVE_YN
     */
    public void setActiveYn(String value) {
        setAttributeInternal(ACTIVEYN, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @return the ATTRIBUTE1
     */
    public String getAttribute1() {
        return (String) getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @param value value to set the ATTRIBUTE1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE10 using the alias name Attribute10.
     * @return the ATTRIBUTE10
     */
    public String getAttribute10() {
        return (String) getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE10 using the alias name Attribute10.
     * @param value value to set the ATTRIBUTE10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE2 using the alias name Attribute2.
     * @return the ATTRIBUTE2
     */
    public String getAttribute2() {
        return (String) getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE2 using the alias name Attribute2.
     * @param value value to set the ATTRIBUTE2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE3 using the alias name Attribute3.
     * @return the ATTRIBUTE3
     */
    public String getAttribute3() {
        return (String) getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE3 using the alias name Attribute3.
     * @param value value to set the ATTRIBUTE3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE4 using the alias name Attribute4.
     * @return the ATTRIBUTE4
     */
    public String getAttribute4() {
        return (String) getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE4 using the alias name Attribute4.
     * @param value value to set the ATTRIBUTE4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE5 using the alias name Attribute5.
     * @return the ATTRIBUTE5
     */
    public String getAttribute5() {
        return (String) getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE5 using the alias name Attribute5.
     * @param value value to set the ATTRIBUTE5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE6 using the alias name Attribute6.
     * @return the ATTRIBUTE6
     */
    public String getAttribute6() {
        return (String) getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE6 using the alias name Attribute6.
     * @param value value to set the ATTRIBUTE6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE7 using the alias name Attribute7.
     * @return the ATTRIBUTE7
     */
    public String getAttribute7() {
        return (String) getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE7 using the alias name Attribute7.
     * @param value value to set the ATTRIBUTE7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE8 using the alias name Attribute8.
     * @return the ATTRIBUTE8
     */
    public String getAttribute8() {
        return (String) getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE8 using the alias name Attribute8.
     * @param value value to set the ATTRIBUTE8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE9 using the alias name Attribute9.
     * @return the ATTRIBUTE9
     */
    public String getAttribute9() {
        return (String) getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE9 using the alias name Attribute9.
     * @param value value to set the ATTRIBUTE9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE_CATEGORY using the alias name AttributeCategory.
     * @return the ATTRIBUTE_CATEGORY
     */
    public String getAttributeCategory() {
        return (String) getAttributeInternal(ATTRIBUTECATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE_CATEGORY using the alias name AttributeCategory.
     * @param value value to set the ATTRIBUTE_CATEGORY
     */
    public void setAttributeCategory(String value) {
        setAttributeInternal(ATTRIBUTECATEGORY, value);
    }

    /**
     * Gets the attribute value for BASE_PRICE using the alias name BasePrice.
     * @return the BASE_PRICE
     */
    public BigDecimal getBasePrice() {
        return (BigDecimal) getAttributeInternal(BASEPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for BASE_PRICE using the alias name BasePrice.
     * @param value value to set the BASE_PRICE
     */
    public void setBasePrice(BigDecimal value) {
        setAttributeInternal(BASEPRICE, value);
    }

    /**
     * Gets the attribute value for BUILD_ID using the alias name BuildId.
     * @return the BUILD_ID
     */
    public BigDecimal getBuildId() {
        return (BigDecimal) getAttributeInternal(BUILDID);
    }

    /**
     * Sets <code>value</code> as attribute value for BUILD_ID using the alias name BuildId.
     * @param value value to set the BUILD_ID
     */
    public void setBuildId(BigDecimal value) {
        setAttributeInternal(BUILDID, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for EJARI_PAYMENT_CHARGE using the alias name EjariPaymentCharge.
     * @return the EJARI_PAYMENT_CHARGE
     */
    public BigDecimal getEjariPaymentCharge() {
        return (BigDecimal) getAttributeInternal(EJARIPAYMENTCHARGE);
    }

    /**
     * Sets <code>value</code> as attribute value for EJARI_PAYMENT_CHARGE using the alias name EjariPaymentCharge.
     * @param value value to set the EJARI_PAYMENT_CHARGE
     */
    public void setEjariPaymentCharge(BigDecimal value) {
        setAttributeInternal(EJARIPAYMENTCHARGE, value);
    }

    /**
     * Gets the attribute value for ELECTRICITY_CHARGES using the alias name ElectricityCharges.
     * @return the ELECTRICITY_CHARGES
     */
    public BigDecimal getElectricityCharges() {
        return (BigDecimal) getAttributeInternal(ELECTRICITYCHARGES);
    }

    /**
     * Sets <code>value</code> as attribute value for ELECTRICITY_CHARGES using the alias name ElectricityCharges.
     * @param value value to set the ELECTRICITY_CHARGES
     */
    public void setElectricityCharges(BigDecimal value) {
        setAttributeInternal(ELECTRICITYCHARGES, value);
    }

    /**
     * Gets the attribute value for END_DATE using the alias name EndDate.
     * @return the END_DATE
     */
    public Date getEndDate() {
        return (Date) getAttributeInternal(ENDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for END_DATE using the alias name EndDate.
     * @param value value to set the END_DATE
     */
    public void setEndDate(Date value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @param value value to set the LAST_UPDATE_DATE
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public String getLastUpdateLogin() {
        return (String) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @param value value to set the LAST_UPDATE_LOGIN
     */
    public void setLastUpdateLogin(String value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for MIN_PRICE using the alias name MinPrice.
     * @return the MIN_PRICE
     */
    public BigDecimal getMinPrice() {
        return (BigDecimal) getAttributeInternal(MINPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for MIN_PRICE using the alias name MinPrice.
     * @param value value to set the MIN_PRICE
     */
    public void setMinPrice(BigDecimal value) {
        setAttributeInternal(MINPRICE, value);
    }

    /**
     * Gets the attribute value for MUNICIPALITY_CHARGES using the alias name MunicipalityCharges.
     * @return the MUNICIPALITY_CHARGES
     */
    public BigDecimal getMunicipalityCharges() {
        return (BigDecimal) getAttributeInternal(MUNICIPALITYCHARGES);
    }

    /**
     * Sets <code>value</code> as attribute value for MUNICIPALITY_CHARGES using the alias name MunicipalityCharges.
     * @param value value to set the MUNICIPALITY_CHARGES
     */
    public void setMunicipalityCharges(BigDecimal value) {
        setAttributeInternal(MUNICIPALITYCHARGES, value);
    }

    /**
     * Gets the attribute value for OBJECT_VERSION using the alias name ObjectVersion.
     * @return the OBJECT_VERSION
     */
    public BigDecimal getObjectVersion() {
        return (BigDecimal) getAttributeInternal(OBJECTVERSION);
    }

    /**
     * Sets <code>value</code> as attribute value for OBJECT_VERSION using the alias name ObjectVersion.
     * @param value value to set the OBJECT_VERSION
     */
    public void setObjectVersion(BigDecimal value) {
        setAttributeInternal(OBJECTVERSION, value);
    }

    /**
     * Gets the attribute value for PL_AMOUNT using the alias name PlAmount.
     * @return the PL_AMOUNT
     */
    public BigDecimal getPlAmount() {
        return (BigDecimal) getAttributeInternal(PLAMOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for PL_AMOUNT using the alias name PlAmount.
     * @param value value to set the PL_AMOUNT
     */
    public void setPlAmount(BigDecimal value) {
        setAttributeInternal(PLAMOUNT, value);
    }

    /**
     * Gets the attribute value for PL_ID using the alias name PlId.
     * @return the PL_ID
     */
    public BigDecimal getPlId() {
        return (BigDecimal) getAttributeInternal(PLID);
    }

    /**
     * Sets <code>value</code> as attribute value for PL_ID using the alias name PlId.
     * @param value value to set the PL_ID
     */
    public void setPlId(BigDecimal value) {
        setAttributeInternal(PLID, value);
    }

    /**
     * Gets the attribute value for PLL_ID using the alias name PllId.
     * @return the PLL_ID
     */
    public Number getPllId() {
        return (Number)getAttributeInternal(PLLID);
    }

    /**
     * Sets <code>value</code> as attribute value for PLL_ID using the alias name PllId.
     * @param value value to set the PLL_ID
     */
    public void setPllId(Number value) {
        setAttributeInternal(PLLID, value);
    }

    /**
     * Gets the attribute value for PROPERTY_ID using the alias name PropertyId.
     * @return the PROPERTY_ID
     */
    public BigDecimal getPropertyId() {
        return (BigDecimal) getAttributeInternal(PROPERTYID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROPERTY_ID using the alias name PropertyId.
     * @param value value to set the PROPERTY_ID
     */
    public void setPropertyId(BigDecimal value) {
        setAttributeInternal(PROPERTYID, value);
    }

    /**
     * Gets the attribute value for REVISED_BY using the alias name RevisedBy.
     * @return the REVISED_BY
     */
    public String getRevisedBy() {
        return (String) getAttributeInternal(REVISEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for REVISED_BY using the alias name RevisedBy.
     * @param value value to set the REVISED_BY
     */
    public void setRevisedBy(String value) {
        setAttributeInternal(REVISEDBY, value);
    }

    /**
     * Gets the attribute value for REVISION_DATE using the alias name RevisionDate.
     * @return the REVISION_DATE
     */
    public Date getRevisionDate() {
        return (Date) getAttributeInternal(REVISIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for REVISION_DATE using the alias name RevisionDate.
     * @param value value to set the REVISION_DATE
     */
    public void setRevisionDate(Date value) {
        setAttributeInternal(REVISIONDATE, value);
    }

    /**
     * Gets the attribute value for REVISION_NO using the alias name RevisionNo.
     * @return the REVISION_NO
     */
    public BigDecimal getRevisionNo() {
        return (BigDecimal) getAttributeInternal(REVISIONNO);
    }

    /**
     * Sets <code>value</code> as attribute value for REVISION_NO using the alias name RevisionNo.
     * @param value value to set the REVISION_NO
     */
    public void setRevisionNo(BigDecimal value) {
        setAttributeInternal(REVISIONNO, value);
    }

    /**
     * Gets the attribute value for SECURITY_DEPOSITE using the alias name SecurityDeposite.
     * @return the SECURITY_DEPOSITE
     */
    public BigDecimal getSecurityDeposite() {
        return (BigDecimal) getAttributeInternal(SECURITYDEPOSITE);
    }

    /**
     * Sets <code>value</code> as attribute value for SECURITY_DEPOSITE using the alias name SecurityDeposite.
     * @param value value to set the SECURITY_DEPOSITE
     */
    public void setSecurityDeposite(BigDecimal value) {
        setAttributeInternal(SECURITYDEPOSITE, value);
    }

    /**
     * Gets the attribute value for START_DATE using the alias name StartDate.
     * @return the START_DATE
     */
    public Date getStartDate() {
        return (Date) getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for START_DATE using the alias name StartDate.
     * @param value value to set the START_DATE
     */
    public void setStartDate(Date value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for UNIT_ID using the alias name UnitId.
     * @return the UNIT_ID
     */
    public Number getUnitId() {
        return (Number)getAttributeInternal(UNITID);
    }

    /**
     * Sets <code>value</code> as attribute value for UNIT_ID using the alias name UnitId.
     * @param value value to set the UNIT_ID
     */
    public void setUnitId(Number value) {
        setAttributeInternal(UNITID, value);
    }

    /**
     * Gets the attribute value for UOM using the alias name Uom.
     * @return the UOM
     */
    public String getUom() {
        return (String) getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM using the alias name Uom.
     * @param value value to set the UOM
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UnitTTypeTrans.
     * @return the UnitTTypeTrans
     */
    public String getUnitTTypeTrans() {
        Number buId=null;
       String unitTrans = null;
        if (getUnitId()!= null && getPropertyId()!=null && getBuildId()!=null) 
        {
                    ViewObjectImpl vo=(ViewObjectImpl)this.getSearchUnitFilterROVA_E().getViewObject();
                    ViewCriteria vc =vo.createViewCriteria();
                    ViewCriteriaRow vcRow = vc.createViewCriteriaRow();
                    vcRow.setAttribute("PropertyId", getPropertyId());
                    vcRow.setAttribute("BuildId", getBuildId());
                    vcRow.setAttribute("UnitId", getUnitId());
                    vc.addRow(vcRow);
                    vo.applyViewCriteria(vc);
                    vo.executeQuery();
                    if(vo.getEstimatedRowCount()>=1){
                        unitTrans =vo.first().getAttribute("UnitTypeDisp")==null?"0":vo.first().getAttribute("UnitTypeDisp").toString();
                        return unitTrans ;
                     }else{
                         return (String) getAttributeInternal(UNITTTYPETRANS);
                     }
                }else {
                    return (String) getAttributeInternal(UNITTTYPETRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UnitTTypeTrans.
     * @param value value to set the  UnitTTypeTrans
     */
    public void setUnitTTypeTrans(String value) {
        setAttributeInternal(UNITTTYPETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UnitNameTrans.
     * @return the UnitNameTrans
     */
    public String getUnitNameTrans() {
        Number buId=null;
        String unitTrans = null;
        if (getUnitId()!= null && getPropertyId()!=null && getBuildId()!=null) 
        {
            ViewObjectImpl vo=(ViewObjectImpl)this.getSearchUnitFilterROVA_E().getViewObject();
            ViewCriteria vc =vo.createViewCriteria();
            ViewCriteriaRow vcRow = vc.createViewCriteriaRow();
            vcRow.setAttribute("PropertyId", getPropertyId());
            vcRow.setAttribute("BuildId", getBuildId());
            vcRow.setAttribute("UnitId", getUnitId());
            vc.addRow(vcRow);
            vo.applyViewCriteria(vc);
            vo.executeQuery();
            if(vo.getEstimatedRowCount()>=1){
                unitTrans =vo.first().getAttribute("UnitNumber")==null?"0":vo.first().getAttribute("UnitNumber").toString();
                return unitTrans ;
             }else{
                return (String) getAttributeInternal(UNITNAMETRANS); 
             }
        }else {
            return (String) getAttributeInternal(UNITNAMETRANS);
        }
    }
    

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UnitNameTrans.
     * @param value value to set the  UnitNameTrans
     */
    public void setUnitNameTrans(String value) {
        setAttributeInternal(UNITNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AreaSqFtTrans.
     * @return the AreaSqFtTrans
     */
    public BigDecimal getAreaSqFtTrans() {
        Number buId=null;
                String unitTrans = null;
                if (getUnitId()!= null && getPropertyId()!=null && getBuildId()!=null) 
                {
                    ViewObjectImpl vo=(ViewObjectImpl)this.getSearchUnitFilterROVA_E().getViewObject();
                    ViewCriteria vc =vo.createViewCriteria();
                    ViewCriteriaRow vcRow = vc.createViewCriteriaRow();
                    vcRow.setAttribute("PropertyId", getPropertyId());
                    vcRow.setAttribute("BuildId", getBuildId());
                    vcRow.setAttribute("UnitId", getUnitId());
                    vc.addRow(vcRow);
                    vo.applyViewCriteria(vc);
                    vo.executeQuery();
                    if(vo.getEstimatedRowCount()>=1){
                        unitTrans =vo.first().getAttribute("FuncId")==null?"0":vo.first().getAttribute("FuncId").toString();
                        return new BigDecimal(unitTrans);
                     }else{
                         return (BigDecimal) getAttributeInternal(AREASQFTTRANS);
                     }
                }else {
                    return (BigDecimal) getAttributeInternal(AREASQFTTRANS);
                }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AreaSqFtTrans.
     * @param value value to set the  AreaSqFtTrans
     */
    public void setAreaSqFtTrans(BigDecimal value) {
        setAttributeInternal(AREASQFTTRANS, value);
    }


    /**
     * Gets the attribute value for ADMIN_FEE using the alias name AdminFee.
     * @return the ADMIN_FEE
     */
    public BigDecimal getAdminFee() {
        return (BigDecimal) getAttributeInternal(ADMINFEE);
    }

    /**
     * Sets <code>value</code> as attribute value for ADMIN_FEE using the alias name AdminFee.
     * @param value value to set the ADMIN_FEE
     */
    public void setAdminFee(BigDecimal value) {
        setAttributeInternal(ADMINFEE, value);
    }

    /**
     * Gets the attribute value for OTHER_CHARGE using the alias name OtherCharge.
     * @return the OTHER_CHARGE
     */
    public BigDecimal getOtherCharge() {
        return (BigDecimal) getAttributeInternal(OTHERCHARGE);
    }

    /**
     * Sets <code>value</code> as attribute value for OTHER_CHARGE using the alias name OtherCharge.
     * @param value value to set the OTHER_CHARGE
     */
    public void setOtherCharge(BigDecimal value) {
        setAttributeInternal(OTHERCHARGE, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link XxplHeader.
     */
    public oracle.jbo.Row getXxplHeader() {
        return (Row)getAttributeInternal(XXPLHEADER);
    }

    /**
     * Sets the master-detail link XxplHeader between this object and <code>value</code>.
     */
    public void setXxplHeader(oracle.jbo.Row value) {
        setAttributeInternal(XXPLHEADER, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XxplOtherCharges.
     */
    public RowIterator getXxplOtherCharges() {
        return (RowIterator)getAttributeInternal(XXPLOTHERCHARGES);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SearchUnitFilterROVO.
     */
    public RowSet getSearchUnitFilterROVO() {
        return (RowSet)getAttributeInternal(SEARCHUNITFILTERROVO);
    }


    /**
     * Gets the view accessor <code>RowSet</code> SearchPropertyFilterROVO.
     */
    public RowSet getSearchPropertyFilterROVO() {
        return (RowSet)getAttributeInternal(SEARCHPROPERTYFILTERROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SearchUnitFilterROVA_E.
     */
    public RowSet getSearchUnitFilterROVA_E() {
        return (RowSet)getAttributeInternal(SEARCHUNITFILTERROVA_E);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
