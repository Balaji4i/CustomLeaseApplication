package custom.lease.model.View;

import custom.lease.model.Entity.XxplPropertyMasterEOImpl;

import java.text.ParseException;
import java.text.SimpleDateFormat;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Apr 09 16:12:01 IST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxplPropertyMasterViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        PropertyId {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getPropertyId();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setPropertyId((Number)value);
            }
        }
        ,
        PropertyName {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getPropertyName();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setPropertyName((String)value);
            }
        }
        ,
        PropertyNameTl {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getPropertyNameTl();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setPropertyNameTl((String)value);
            }
        }
        ,
        PropertyNumber {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getPropertyNumber();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setPropertyNumber((String)value);
            }
        }
        ,
        PropertyShortcode {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getPropertyShortcode();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setPropertyShortcode((String)value);
            }
        }
        ,
        FuncId {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getFuncId();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setFuncId((Number)value);
            }
        }
        ,
        OrgId {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getOrgId();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setOrgId((Number)value);
            }
        }
        ,
        ProjectId {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getProjectId();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setProjectId((Number)value);
            }
        }
        ,
        CostCenterCode {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getCostCenterCode();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setCostCenterCode((String)value);
            }
        }
        ,
        LocationId {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getLocationId();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setLocationId((Number)value);
            }
        }
        ,
        PropertyType {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getPropertyType();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setPropertyType((String)value);
            }
        }
        ,
        NoOfUnits {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getNoOfUnits();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setNoOfUnits((Number)value);
            }
        }
        ,
        ParentPropertyId {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getParentPropertyId();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setParentPropertyId((Number)value);
            }
        }
        ,
        PropertyClass {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getPropertyClass();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setPropertyClass((String)value);
            }
        }
        ,
        PropertyCategory {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getPropertyCategory();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setPropertyCategory((String)value);
            }
        }
        ,
        VendId {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getVendId();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setVendId((Number)value);
            }
        }
        ,
        Description {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getDescription();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        ActiveYn {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getActiveYn();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setActiveYn((String)value);
            }
        }
        ,
        SaleableYn {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getSaleableYn();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setSaleableYn((String)value);
            }
        }
        ,
        LeaseableYn {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getLeaseableYn();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setLeaseableYn((String)value);
            }
        }
        ,
        AttributeCategory {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getAttributeCategory();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttributeCategory((String)value);
            }
        }
        ,
        Attribute1 {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getAttribute1();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getAttribute2();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getAttribute3();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getAttribute4();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getAttribute5();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        Attribute6 {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getAttribute6();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttribute6((String)value);
            }
        }
        ,
        Attribute7 {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getAttribute7();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttribute7((String)value);
            }
        }
        ,
        Attribute8 {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getAttribute8();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttribute8((String)value);
            }
        }
        ,
        Attribute9 {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getAttribute9();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttribute9((String)value);
            }
        }
        ,
        Attribute10 {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getAttribute10();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttribute10((String)value);
            }
        }
        ,
        ObjectVersion {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getObjectVersion();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setObjectVersion((Number)value);
            }
        }
        ,
        CreatedBy {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setCreationDate((Timestamp)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setLastUpdateDate((Timestamp)value);
            }
        }
        ,
        LastUpdateLogin {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getLastUpdateLogin();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setLastUpdateLogin((String)value);
            }
        }
        ,
        RowID {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getRowID();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setRowID((oracle.jbo.domain.RowID)value);
            }
        }
        ,
        ProjectName {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getProjectName();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setProjectName((String)value);
            }
        }
        ,
        ProjectNumber {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getProjectNumber();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setProjectNumber((String)value);
            }
        }
        ,
        ProjectStartDate {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getProjectStartDate();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setProjectStartDate((Date)value);
            }
        }
        ,
        ProjectCloseDate {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getProjectCloseDate();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setProjectCloseDate((Date)value);
            }
        }
        ,
        ProjectCompletionDate {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getProjectCompletionDate();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setProjectCompletionDate((Date)value);
            }
        }
        ,
        Address1 {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getAddress1();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAddress1((String)value);
            }
        }
        ,
        Address2 {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getAddress2();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAddress2((String)value);
            }
        }
        ,
        Address3 {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getAddress3();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAddress3((String)value);
            }
        }
        ,
        Address4 {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getAddress4();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAddress4((String)value);
            }
        }
        ,
        City {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getCity();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setCity((String)value);
            }
        }
        ,
        Country {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getCountry();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setCountry((String)value);
            }
        }
        ,
        XxplPropertyAreaView {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getXxplPropertyAreaView();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XxplPropertyMilestoneVO {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getXxplPropertyMilestoneVO();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XXSTG_ORGANIZATIONS_ROVO {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getXXSTG_ORGANIZATIONS_ROVO();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XXSTG_PROJECTS {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getXXSTG_PROJECTS();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XXSTG_LOCATIONS {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getXXSTG_LOCATIONS();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Lookup_PropertyType {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getLookup_PropertyType();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XXSTG_LOCATIONS_REF {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getXXSTG_LOCATIONS_REF();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XXSTG_PROJECTS_REF {
            public Object get(XxplPropertyMasterViewRowImpl obj) {
                return obj.getXXSTG_PROJECTS_REF();
            }

            public void put(XxplPropertyMasterViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxplPropertyMasterViewRowImpl object);

        public abstract void put(XxplPropertyMasterViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PROPERTYID = AttributesEnum.PropertyId.index();
    public static final int PROPERTYNAME = AttributesEnum.PropertyName.index();
    public static final int PROPERTYNAMETL = AttributesEnum.PropertyNameTl.index();
    public static final int PROPERTYNUMBER = AttributesEnum.PropertyNumber.index();
    public static final int PROPERTYSHORTCODE = AttributesEnum.PropertyShortcode.index();
    public static final int FUNCID = AttributesEnum.FuncId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int COSTCENTERCODE = AttributesEnum.CostCenterCode.index();
    public static final int LOCATIONID = AttributesEnum.LocationId.index();
    public static final int PROPERTYTYPE = AttributesEnum.PropertyType.index();
    public static final int NOOFUNITS = AttributesEnum.NoOfUnits.index();
    public static final int PARENTPROPERTYID = AttributesEnum.ParentPropertyId.index();
    public static final int PROPERTYCLASS = AttributesEnum.PropertyClass.index();
    public static final int PROPERTYCATEGORY = AttributesEnum.PropertyCategory.index();
    public static final int VENDID = AttributesEnum.VendId.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int ACTIVEYN = AttributesEnum.ActiveYn.index();
    public static final int SALEABLEYN = AttributesEnum.SaleableYn.index();
    public static final int LEASEABLEYN = AttributesEnum.LeaseableYn.index();
    public static final int ATTRIBUTECATEGORY = AttributesEnum.AttributeCategory.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int OBJECTVERSION = AttributesEnum.ObjectVersion.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int ROWID = AttributesEnum.RowID.index();
    public static final int PROJECTNAME = AttributesEnum.ProjectName.index();
    public static final int PROJECTNUMBER = AttributesEnum.ProjectNumber.index();
    public static final int PROJECTSTARTDATE = AttributesEnum.ProjectStartDate.index();
    public static final int PROJECTCLOSEDATE = AttributesEnum.ProjectCloseDate.index();
    public static final int PROJECTCOMPLETIONDATE = AttributesEnum.ProjectCompletionDate.index();
    public static final int ADDRESS1 = AttributesEnum.Address1.index();
    public static final int ADDRESS2 = AttributesEnum.Address2.index();
    public static final int ADDRESS3 = AttributesEnum.Address3.index();
    public static final int ADDRESS4 = AttributesEnum.Address4.index();
    public static final int CITY = AttributesEnum.City.index();
    public static final int COUNTRY = AttributesEnum.Country.index();
    public static final int XXPLPROPERTYAREAVIEW = AttributesEnum.XxplPropertyAreaView.index();
    public static final int XXPLPROPERTYMILESTONEVO = AttributesEnum.XxplPropertyMilestoneVO.index();
    public static final int XXSTG_ORGANIZATIONS_ROVO = AttributesEnum.XXSTG_ORGANIZATIONS_ROVO.index();
    public static final int XXSTG_PROJECTS = AttributesEnum.XXSTG_PROJECTS.index();
    public static final int XXSTG_LOCATIONS = AttributesEnum.XXSTG_LOCATIONS.index();
    public static final int LOOKUP_PROPERTYTYPE = AttributesEnum.Lookup_PropertyType.index();
    public static final int XXSTG_LOCATIONS_REF = AttributesEnum.XXSTG_LOCATIONS_REF.index();
    public static final int XXSTG_PROJECTS_REF = AttributesEnum.XXSTG_PROJECTS_REF.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxplPropertyMasterViewRowImpl() {
    }

    /**
     * Gets XxplPropertyMasterEO entity object.
     * @return the XxplPropertyMasterEO
     */
    public XxplPropertyMasterEOImpl getXxplPropertyMasterEO() {
        return (XxplPropertyMasterEOImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for PROPERTY_ID using the alias name PropertyId.
     * @return the PROPERTY_ID
     */
    public Number getPropertyId() {
        return (Number)getAttributeInternal(PROPERTYID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROPERTY_ID using the alias name PropertyId.
     * @param value value to set the PROPERTY_ID
     */
    public void setPropertyId(Number value) {
        setAttributeInternal(PROPERTYID, value);
    }

    /**
     * Gets the attribute value for PROPERTY_NAME using the alias name PropertyName.
     * @return the PROPERTY_NAME
     */
    public String getPropertyName() {
        return (String)getAttributeInternal(PROPERTYNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for PROPERTY_NAME using the alias name PropertyName.
     * @param value value to set the PROPERTY_NAME
     */
    public void setPropertyName(String value) {
        setAttributeInternal(PROPERTYNAME, value);
    }

    /**
     * Gets the attribute value for PROPERTY_NAME_TL using the alias name PropertyNameTl.
     * @return the PROPERTY_NAME_TL
     */
    public String getPropertyNameTl() {
        return (String)getAttributeInternal(PROPERTYNAMETL);
    }

    /**
     * Sets <code>value</code> as attribute value for PROPERTY_NAME_TL using the alias name PropertyNameTl.
     * @param value value to set the PROPERTY_NAME_TL
     */
    public void setPropertyNameTl(String value) {
        setAttributeInternal(PROPERTYNAMETL, value);
    }

    /**
     * Gets the attribute value for PROPERTY_NUMBER using the alias name PropertyNumber.
     * @return the PROPERTY_NUMBER
     */
    public String getPropertyNumber() {
        return (String)getAttributeInternal(PROPERTYNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for PROPERTY_NUMBER using the alias name PropertyNumber.
     * @param value value to set the PROPERTY_NUMBER
     */
    public void setPropertyNumber(String value) {
        setAttributeInternal(PROPERTYNUMBER, value);
    }

    /**
     * Gets the attribute value for PROPERTY_SHORTCODE using the alias name PropertyShortcode.
     * @return the PROPERTY_SHORTCODE
     */
    public String getPropertyShortcode() {
        return (String)getAttributeInternal(PROPERTYSHORTCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for PROPERTY_SHORTCODE using the alias name PropertyShortcode.
     * @param value value to set the PROPERTY_SHORTCODE
     */
    public void setPropertyShortcode(String value) {
        setAttributeInternal(PROPERTYSHORTCODE, value.toUpperCase());
    }

    /**
     * Gets the attribute value for FUNC_ID using the alias name FuncId.
     * @return the FUNC_ID
     */
    public Number getFuncId() {
        return (Number)getAttributeInternal(FUNCID);
    }

    /**
     * Sets <code>value</code> as attribute value for FUNC_ID using the alias name FuncId.
     * @param value value to set the FUNC_ID
     */
    public void setFuncId(Number value) {
        setAttributeInternal(FUNCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public Number getOrgId() {
        return (Number)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(Number value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PROJECT_ID using the alias name ProjectId.
     * @return the PROJECT_ID
     */
    public Number getProjectId() {
        return (Number)getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROJECT_ID using the alias name ProjectId.
     * @param value value to set the PROJECT_ID
     */
    public void setProjectId(Number value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for COST_CENTER_CODE using the alias name CostCenterCode.
     * @return the COST_CENTER_CODE
     */
    public String getCostCenterCode() {
        return (String)getAttributeInternal(COSTCENTERCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for COST_CENTER_CODE using the alias name CostCenterCode.
     * @param value value to set the COST_CENTER_CODE
     */
    public void setCostCenterCode(String value) {
        setAttributeInternal(COSTCENTERCODE, value);
    }

    /**
     * Gets the attribute value for LOCATION_ID using the alias name LocationId.
     * @return the LOCATION_ID
     */
    public Number getLocationId() {
        return (Number)getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as attribute value for LOCATION_ID using the alias name LocationId.
     * @param value value to set the LOCATION_ID
     */
    public void setLocationId(Number value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for PROPERTY_TYPE using the alias name PropertyType.
     * @return the PROPERTY_TYPE
     */
    public String getPropertyType() {
        return (String)getAttributeInternal(PROPERTYTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for PROPERTY_TYPE using the alias name PropertyType.
     * @param value value to set the PROPERTY_TYPE
     */
    public void setPropertyType(String value) {
        setAttributeInternal(PROPERTYTYPE, value);
    }

    /**
     * Gets the attribute value for NO_OF_UNITS using the alias name NoOfUnits.
     * @return the NO_OF_UNITS
     */
    public Number getNoOfUnits() {
        return (Number)getAttributeInternal(NOOFUNITS);
    }

    /**
     * Sets <code>value</code> as attribute value for NO_OF_UNITS using the alias name NoOfUnits.
     * @param value value to set the NO_OF_UNITS
     */
    public void setNoOfUnits(Number value) {
        setAttributeInternal(NOOFUNITS, value);
    }

    /**
     * Gets the attribute value for PARENT_PROPERTY_ID using the alias name ParentPropertyId.
     * @return the PARENT_PROPERTY_ID
     */
    public Number getParentPropertyId() {
        return (Number)getAttributeInternal(PARENTPROPERTYID);
    }

    /**
     * Sets <code>value</code> as attribute value for PARENT_PROPERTY_ID using the alias name ParentPropertyId.
     * @param value value to set the PARENT_PROPERTY_ID
     */
    public void setParentPropertyId(Number value) {
        setAttributeInternal(PARENTPROPERTYID, value);
    }

    /**
     * Gets the attribute value for PROPERTY_CLASS using the alias name PropertyClass.
     * @return the PROPERTY_CLASS
     */
    public String getPropertyClass() {
        return (String)getAttributeInternal(PROPERTYCLASS);
    }

    /**
     * Sets <code>value</code> as attribute value for PROPERTY_CLASS using the alias name PropertyClass.
     * @param value value to set the PROPERTY_CLASS
     */
    public void setPropertyClass(String value) {
        setAttributeInternal(PROPERTYCLASS, value);
    }

    /**
     * Gets the attribute value for PROPERTY_CATEGORY using the alias name PropertyCategory.
     * @return the PROPERTY_CATEGORY
     */
    public String getPropertyCategory() {
        return (String)getAttributeInternal(PROPERTYCATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for PROPERTY_CATEGORY using the alias name PropertyCategory.
     * @param value value to set the PROPERTY_CATEGORY
     */
    public void setPropertyCategory(String value) {
        setAttributeInternal(PROPERTYCATEGORY, value);
    }

    /**
     * Gets the attribute value for VEND_ID using the alias name VendId.
     * @return the VEND_ID
     */
    public Number getVendId() {
        return (Number)getAttributeInternal(VENDID);
    }

    /**
     * Sets <code>value</code> as attribute value for VEND_ID using the alias name VendId.
     * @param value value to set the VEND_ID
     */
    public void setVendId(Number value) {
        setAttributeInternal(VENDID, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for ACTIVE_YN using the alias name ActiveYn.
     * @return the ACTIVE_YN
     */
    public String getActiveYn() {
        return (String)getAttributeInternal(ACTIVEYN);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIVE_YN using the alias name ActiveYn.
     * @param value value to set the ACTIVE_YN
     */
    public void setActiveYn(String value) {
        setAttributeInternal(ACTIVEYN, value);
    }

    /**
     * Gets the attribute value for SALEABLE_YN using the alias name SaleableYn.
     * @return the SALEABLE_YN
     */
    public String getSaleableYn() {
        return (String)getAttributeInternal(SALEABLEYN);
    }

    /**
     * Sets <code>value</code> as attribute value for SALEABLE_YN using the alias name SaleableYn.
     * @param value value to set the SALEABLE_YN
     */
    public void setSaleableYn(String value) {
        setAttributeInternal(SALEABLEYN, value);
    }

    /**
     * Gets the attribute value for LEASEABLE_YN using the alias name LeaseableYn.
     * @return the LEASEABLE_YN
     */
    public String getLeaseableYn() {
        return (String)getAttributeInternal(LEASEABLEYN);
    }

    /**
     * Sets <code>value</code> as attribute value for LEASEABLE_YN using the alias name LeaseableYn.
     * @param value value to set the LEASEABLE_YN
     */
    public void setLeaseableYn(String value) {
        setAttributeInternal(LEASEABLEYN, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE_CATEGORY using the alias name AttributeCategory.
     * @return the ATTRIBUTE_CATEGORY
     */
    public String getAttributeCategory() {
        return (String)getAttributeInternal(ATTRIBUTECATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE_CATEGORY using the alias name AttributeCategory.
     * @param value value to set the ATTRIBUTE_CATEGORY
     */
    public void setAttributeCategory(String value) {
        setAttributeInternal(ATTRIBUTECATEGORY, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @return the ATTRIBUTE1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @param value value to set the ATTRIBUTE1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE2 using the alias name Attribute2.
     * @return the ATTRIBUTE2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE2 using the alias name Attribute2.
     * @param value value to set the ATTRIBUTE2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE3 using the alias name Attribute3.
     * @return the ATTRIBUTE3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE3 using the alias name Attribute3.
     * @param value value to set the ATTRIBUTE3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE4 using the alias name Attribute4.
     * @return the ATTRIBUTE4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE4 using the alias name Attribute4.
     * @param value value to set the ATTRIBUTE4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE5 using the alias name Attribute5.
     * @return the ATTRIBUTE5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE5 using the alias name Attribute5.
     * @param value value to set the ATTRIBUTE5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE6 using the alias name Attribute6.
     * @return the ATTRIBUTE6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE6 using the alias name Attribute6.
     * @param value value to set the ATTRIBUTE6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE7 using the alias name Attribute7.
     * @return the ATTRIBUTE7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE7 using the alias name Attribute7.
     * @param value value to set the ATTRIBUTE7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE8 using the alias name Attribute8.
     * @return the ATTRIBUTE8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE8 using the alias name Attribute8.
     * @param value value to set the ATTRIBUTE8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE9 using the alias name Attribute9.
     * @return the ATTRIBUTE9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE9 using the alias name Attribute9.
     * @param value value to set the ATTRIBUTE9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE10 using the alias name Attribute10.
     * @return the ATTRIBUTE10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE10 using the alias name Attribute10.
     * @param value value to set the ATTRIBUTE10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for OBJECT_VERSION using the alias name ObjectVersion.
     * @return the OBJECT_VERSION
     */
    public Number getObjectVersion() {
        return (Number)getAttributeInternal(OBJECTVERSION);
    }

    /**
     * Sets <code>value</code> as attribute value for OBJECT_VERSION using the alias name ObjectVersion.
     * @param value value to set the OBJECT_VERSION
     */
    public void setObjectVersion(Number value) {
        setAttributeInternal(OBJECTVERSION, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Timestamp getCreationDate() {
        return (Timestamp)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @param value value to set the LAST_UPDATE_DATE
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public String getLastUpdateLogin() {
        return (String)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @param value value to set the LAST_UPDATE_LOGIN
     */
    public void setLastUpdateLogin(String value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for ROWID using the alias name RowID.
     * @return the ROWID
     */
    public RowID getRowID() {
        return (RowID)getAttributeInternal(ROWID);
    }

    /**
     * Sets <code>value</code> as attribute value for ROWID using the alias name RowID.
     * @param value value to set the ROWID
     */
    public void setRowID(RowID value) {
        setAttributeInternal(ROWID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProjectName.
     * @return the ProjectName
     */
    public String getProjectName() {
        String projectName = getProjectDetails("ProjectName");
        if (projectName != null) {
            return projectName;
        } else {
            return (String)getAttributeInternal(PROJECTNAME);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProjectName.
     * @param value value to set the  ProjectName
     */
    public void setProjectName(String value) {
        setAttributeInternal(PROJECTNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProjectNumber.
     * @return the ProjectNumber
     */
    public String getProjectNumber() { 
        String projectNo = getProjectDetails("ProjectNumber");
        if (projectNo != null) {
            return projectNo;
        } else {
            return (String)getAttributeInternal(PROJECTNUMBER);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProjectNumber.
     * @param value value to set the  ProjectNumber
     */
    public void setProjectNumber(String value) {
        setAttributeInternal(PROJECTNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProjectStartDate.
     * @return the ProjectStartDate
     */
    public Date getProjectStartDate() { 
        Date sDate = getProjectDates("StartDate");
        if (sDate != null) {
            return sDate;
        } else {
            return (Date)getAttributeInternal(PROJECTSTARTDATE);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProjectStartDate.
     * @param value value to set the  ProjectStartDate
     */
    public void setProjectStartDate(Date value) {
        setAttributeInternal(PROJECTSTARTDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProjectCloseDate.
     * @return the ProjectCloseDate
     */
    public Date getProjectCloseDate() { 
        Date cDate = getProjectDates("ClosedDate");
        if (cDate != null) {
            return cDate;
        } else {
            return (Date)getAttributeInternal(PROJECTCLOSEDATE);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProjectCloseDate.
     * @param value value to set the  ProjectCloseDate
     */
    public void setProjectCloseDate(Date value) {
        setAttributeInternal(PROJECTCLOSEDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProjectCompletionDate.
     * @return the ProjectCompletionDate
     */
    public Date getProjectCompletionDate() { 
        Date cDate = getProjectDates("CompletionDate");
        if (cDate != null) {
            return cDate;
        } else {
            return (Date)getAttributeInternal(PROJECTCOMPLETIONDATE);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProjectCompletionDate.
     * @param value value to set the  ProjectCompletionDate
     */
    public void setProjectCompletionDate(Date value) {
        setAttributeInternal(PROJECTCOMPLETIONDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Address1.
     * @return the Address1
     */
    public String getAddress1() {
        if (getLocationDetails("Address1") != null) {
            return getLocationDetails("Address1");
        } else {
            return (String)getAttributeInternal(ADDRESS1);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Address1.
     * @param value value to set the  Address1
     */
    public void setAddress1(String value) {
        setAttributeInternal(ADDRESS1, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Address2.
     * @return the Address2
     */
    public String getAddress2() {
        if (getLocationDetails("Address2") != null) {
            return getLocationDetails("Address2");
        } else {
            return (String)getAttributeInternal(ADDRESS2);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Address2.
     * @param value value to set the  Address2
     */
    public void setAddress2(String value) {
        setAttributeInternal(ADDRESS2, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Address3.
     * @return the Address3
     */
    public String getAddress3() {
        if (getLocationDetails("Address3") != null) {
            return getLocationDetails("Address3");
        } else {
            return (String)getAttributeInternal(ADDRESS3);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Address3.
     * @param value value to set the  Address3
     */
    public void setAddress3(String value) {
        setAttributeInternal(ADDRESS3, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Address4.
     * @return the Address4
     */
    public String getAddress4() {
        if (getLocationDetails("Address4") != null) {
            return getLocationDetails("Address4");
        } else {
            return (String)getAttributeInternal(ADDRESS4);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Address4.
     * @param value value to set the  Address4
     */
    public void setAddress4(String value) {
        setAttributeInternal(ADDRESS4, value);
    }

    /**
     * Gets the attribute value for the calculated attribute City.
     * @return the City
     */
    public String getCity() {
        if (getLocationDetails("City") != null) {
            return getLocationDetails("City");
        } else {
            return (String)getAttributeInternal(CITY);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute City.
     * @param value value to set the  City
     */
    public void setCity(String value) {
        setAttributeInternal(CITY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Country.
     * @return the Country
     */
    public String getCountry() {
        if (getLocationDetails("Country") != null) {
            return getLocationDetails("Country");
        } else {
            return (String)getAttributeInternal(COUNTRY);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Country.
     * @param value value to set the  Country
     */
    public void setCountry(String value) {
        setAttributeInternal(COUNTRY, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XxplPropertyAreaView.
     */
    public RowIterator getXxplPropertyAreaView() {
        return (RowIterator)getAttributeInternal(XXPLPROPERTYAREAVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XxplPropertyMilestoneVO.
     */
    public RowIterator getXxplPropertyMilestoneVO() {
        return (RowIterator)getAttributeInternal(XXPLPROPERTYMILESTONEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> XXSTG_ORGANIZATIONS_ROVO.
     */
    public RowSet getXXSTG_ORGANIZATIONS_ROVO() {
        return (RowSet)getAttributeInternal(XXSTG_ORGANIZATIONS_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> XXSTG_PROJECTS.
     */
    public RowSet getXXSTG_PROJECTS() {
        return (RowSet)getAttributeInternal(XXSTG_PROJECTS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> XXSTG_LOCATIONS.
     */
    public RowSet getXXSTG_LOCATIONS() {
        return (RowSet)getAttributeInternal(XXSTG_LOCATIONS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup_PropertyType.
     */
    public RowSet getLookup_PropertyType() {
        return (RowSet)getAttributeInternal(LOOKUP_PROPERTYTYPE);
    }


    /**
     * Gets the view accessor <code>RowSet</code> XXSTG_LOCATIONS_REF.
     */
    public RowSet getXXSTG_LOCATIONS_REF() {
        return (RowSet)getAttributeInternal(XXSTG_LOCATIONS_REF);
    }

    /**
     * Gets the view accessor <code>RowSet</code> XXSTG_PROJECTS_REF.
     */
    public RowSet getXXSTG_PROJECTS_REF() {
        return (RowSet)getAttributeInternal(XXSTG_PROJECTS_REF);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    public String getLocationDetails(String returnColumn) {
        Number locationId = null;
        String returnValue = null;
        if (getLocationId() != null) {
            locationId = getLocationId();
            ViewRowSetImpl vo = (ViewRowSetImpl)getXXSTG_LOCATIONS_REF();
            ViewObject vo1 = vo.getViewObject();
            ViewCriteria vc1 = vo1.createViewCriteria();
            ViewCriteriaRow vcr = vc1.createViewCriteriaRow();
            vcr.setAttribute("LocId", locationId);
            vc1.addRow(vcr);
            vo1.applyViewCriteria(vc1);
            vo1.executeQuery();
            Row rw = vo1.first();
            if (rw != null) {
                returnValue = (String)rw.getAttribute(returnColumn);
            }
            vo1.applyViewCriteria(null);
            vo1.executeQuery();
            return returnValue;
        }else{
            return null;
        }
    }
    
    public String getProjectDetails(String returnColumn) {
        Number projectId = null;
        String returnValue = null;
        if (getProjectId() != null) {
            projectId = getProjectId();
            ViewRowSetImpl vo = (ViewRowSetImpl)getXXSTG_PROJECTS_REF();
            ViewObject vo1 = vo.getViewObject();
            ViewCriteria vc1 = vo1.createViewCriteria();
            ViewCriteriaRow vcr = vc1.createViewCriteriaRow();
            vcr.setAttribute("ProjId", projectId);
            vc1.addRow(vcr);
            vo1.applyViewCriteria(vc1);
            vo1.executeQuery();
            Row rw = vo1.first();
            if (rw != null) {
                returnValue = (String)rw.getAttribute(returnColumn);
            }
            vo1.applyViewCriteria(null);
            vo1.executeQuery();
            return returnValue;
        }else{
            return null;
        }
    }
    public Date getProjectDates(String returnColumn) {
        Number projectId = null;
        String returnValue = null;
        oracle.jbo.domain.Date domainDate= new oracle.jbo.domain.Date();
        if (getProjectId() != null) {
            projectId = getProjectId();
            ViewRowSetImpl vo = (ViewRowSetImpl)getXXSTG_PROJECTS_REF();
            ViewObject vo1 = vo.getViewObject();
            ViewCriteria vc1 = vo1.createViewCriteria();
            ViewCriteriaRow vcr = vc1.createViewCriteriaRow();
            vcr.setAttribute("ProjId", projectId);
            vc1.addRow(vcr);
            vo1.applyViewCriteria(vc1);
            vo1.executeQuery();
            Row rw = vo1.first();
            if (rw != null) {
                domainDate = (Date)rw.getAttribute(returnColumn);
                }
            vo1.applyViewCriteria(null);
            vo1.executeQuery();
            return domainDate;
        }else{
            return null;
        }
    }

}
