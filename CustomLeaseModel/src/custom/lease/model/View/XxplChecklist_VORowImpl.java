package custom.lease.model.View;

import custom.lease.model.Entity.XxplChecklist_EOImpl;

import java.math.BigDecimal;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 19 10:31:37 IST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxplChecklist_VORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ActiveYn {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getActiveYn();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setActiveYn((String)value);
            }
        }
        ,
        Attribute1 {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getAttribute1();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute10 {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getAttribute10();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setAttribute10((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getAttribute2();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getAttribute3();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getAttribute4();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getAttribute5();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        Attribute6 {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getAttribute6();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setAttribute6((String)value);
            }
        }
        ,
        Attribute7 {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getAttribute7();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setAttribute7((String)value);
            }
        }
        ,
        Attribute8 {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getAttribute8();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setAttribute8((String)value);
            }
        }
        ,
        Attribute9 {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getAttribute9();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setAttribute9((String)value);
            }
        }
        ,
        AttributeCategory {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getAttributeCategory();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setAttributeCategory((String)value);
            }
        }
        ,
        ClCode {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getClCode();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setClCode((String)value);
            }
        }
        ,
        ClId {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getClId();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setClId((Number)value);
            }
        }
        ,
        CreatedBy {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setCreationDate((Timestamp)value);
            }
        }
        ,
        Description {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getDescription();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        FuncId {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getFuncId();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setFuncId((BigDecimal)value);
            }
        }
        ,
        FuncRefId {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getFuncRefId();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setFuncRefId((BigDecimal)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setLastUpdateDate((Timestamp)value);
            }
        }
        ,
        LastUpdateLogin {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getLastUpdateLogin();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setLastUpdateLogin((String)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        ObjectVersion {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getObjectVersion();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setObjectVersion((BigDecimal)value);
            }
        }
        ,
        ActiveFlag {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getActiveFlag();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setActiveFlag((Boolean)value);
            }
        }
        ,
        CL_CODE_LOOKUP {
            public Object get(XxplChecklist_VORowImpl obj) {
                return obj.getCL_CODE_LOOKUP();
            }

            public void put(XxplChecklist_VORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxplChecklist_VORowImpl object);

        public abstract void put(XxplChecklist_VORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ACTIVEYN = AttributesEnum.ActiveYn.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTECATEGORY = AttributesEnum.AttributeCategory.index();
    public static final int CLCODE = AttributesEnum.ClCode.index();
    public static final int CLID = AttributesEnum.ClId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int FUNCID = AttributesEnum.FuncId.index();
    public static final int FUNCREFID = AttributesEnum.FuncRefId.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int OBJECTVERSION = AttributesEnum.ObjectVersion.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int CL_CODE_LOOKUP = AttributesEnum.CL_CODE_LOOKUP.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxplChecklist_VORowImpl() {
    }

    /**
     * Gets XxplChecklist_EO entity object.
     * @return the XxplChecklist_EO
     */
    public XxplChecklist_EOImpl getXxplChecklist_EO() {
        return (XxplChecklist_EOImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ACTIVE_YN using the alias name ActiveYn.
     * @return the ACTIVE_YN
     */
    public String getActiveYn() {
        return (String) getAttributeInternal(ACTIVEYN);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIVE_YN using the alias name ActiveYn.
     * @param value value to set the ACTIVE_YN
     */
    public void setActiveYn(String value) {
        setAttributeInternal(ACTIVEYN, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @return the ATTRIBUTE1
     */
    public String getAttribute1() {
        return (String) getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @param value value to set the ATTRIBUTE1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE10 using the alias name Attribute10.
     * @return the ATTRIBUTE10
     */
    public String getAttribute10() {
        return (String) getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE10 using the alias name Attribute10.
     * @param value value to set the ATTRIBUTE10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE2 using the alias name Attribute2.
     * @return the ATTRIBUTE2
     */
    public String getAttribute2() {
        return (String) getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE2 using the alias name Attribute2.
     * @param value value to set the ATTRIBUTE2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE3 using the alias name Attribute3.
     * @return the ATTRIBUTE3
     */
    public String getAttribute3() {
        return (String) getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE3 using the alias name Attribute3.
     * @param value value to set the ATTRIBUTE3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE4 using the alias name Attribute4.
     * @return the ATTRIBUTE4
     */
    public String getAttribute4() {
        return (String) getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE4 using the alias name Attribute4.
     * @param value value to set the ATTRIBUTE4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE5 using the alias name Attribute5.
     * @return the ATTRIBUTE5
     */
    public String getAttribute5() {
        return (String) getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE5 using the alias name Attribute5.
     * @param value value to set the ATTRIBUTE5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE6 using the alias name Attribute6.
     * @return the ATTRIBUTE6
     */
    public String getAttribute6() {
        return (String) getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE6 using the alias name Attribute6.
     * @param value value to set the ATTRIBUTE6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE7 using the alias name Attribute7.
     * @return the ATTRIBUTE7
     */
    public String getAttribute7() {
        return (String) getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE7 using the alias name Attribute7.
     * @param value value to set the ATTRIBUTE7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE8 using the alias name Attribute8.
     * @return the ATTRIBUTE8
     */
    public String getAttribute8() {
        return (String) getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE8 using the alias name Attribute8.
     * @param value value to set the ATTRIBUTE8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE9 using the alias name Attribute9.
     * @return the ATTRIBUTE9
     */
    public String getAttribute9() {
        return (String) getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE9 using the alias name Attribute9.
     * @param value value to set the ATTRIBUTE9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE_CATEGORY using the alias name AttributeCategory.
     * @return the ATTRIBUTE_CATEGORY
     */
    public String getAttributeCategory() {
        return (String) getAttributeInternal(ATTRIBUTECATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE_CATEGORY using the alias name AttributeCategory.
     * @param value value to set the ATTRIBUTE_CATEGORY
     */
    public void setAttributeCategory(String value) {
        setAttributeInternal(ATTRIBUTECATEGORY, value);
    }

    /**
     * Gets the attribute value for CL_CODE using the alias name ClCode.
     * @return the CL_CODE
     */
    public String getClCode() {
        return (String) getAttributeInternal(CLCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CL_CODE using the alias name ClCode.
     * @param value value to set the CL_CODE
     */
    public void setClCode(String value) {
        setAttributeInternal(CLCODE, value);
    }

    /**
     * Gets the attribute value for CL_ID using the alias name ClId.
     * @return the CL_ID
     */
    public Number getClId() {
        return (Number)getAttributeInternal(CLID);
    }

    /**
     * Sets <code>value</code> as attribute value for CL_ID using the alias name ClId.
     * @param value value to set the CL_ID
     */
    public void setClId(Number value) {
        setAttributeInternal(CLID, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public oracle.jbo.domain.Timestamp getCreationDate() {
        return (oracle.jbo.domain.Timestamp)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(oracle.jbo.domain.Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for FUNC_ID using the alias name FuncId.
     * @return the FUNC_ID
     */
    public BigDecimal getFuncId() {
        return (BigDecimal) getAttributeInternal(FUNCID);
    }

    /**
     * Sets <code>value</code> as attribute value for FUNC_ID using the alias name FuncId.
     * @param value value to set the FUNC_ID
     */
    public void setFuncId(BigDecimal value) {
        setAttributeInternal(FUNCID, value);
    }

    /**
     * Gets the attribute value for FUNC_REF_ID using the alias name FuncRefId.
     * @return the FUNC_REF_ID
     */
    public BigDecimal getFuncRefId() {
        return (BigDecimal) getAttributeInternal(FUNCREFID);
    }

    /**
     * Sets <code>value</code> as attribute value for FUNC_REF_ID using the alias name FuncRefId.
     * @param value value to set the FUNC_REF_ID
     */
    public void setFuncRefId(BigDecimal value) {
        setAttributeInternal(FUNCREFID, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public oracle.jbo.domain.Timestamp getLastUpdateDate() {
        return (oracle.jbo.domain.Timestamp)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @param value value to set the LAST_UPDATE_DATE
     */
    public void setLastUpdateDate(oracle.jbo.domain.Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public String getLastUpdateLogin() {
        return (String) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @param value value to set the LAST_UPDATE_LOGIN
     */
    public void setLastUpdateLogin(String value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for OBJECT_VERSION using the alias name ObjectVersion.
     * @return the OBJECT_VERSION
     */
    public BigDecimal getObjectVersion() {
        return (BigDecimal) getAttributeInternal(OBJECTVERSION);
    }

    /**
     * Sets <code>value</code> as attribute value for OBJECT_VERSION using the alias name ObjectVersion.
     * @param value value to set the OBJECT_VERSION
     */
    public void setObjectVersion(BigDecimal value) {
        setAttributeInternal(OBJECTVERSION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ActiveFlag.
     * @return the ActiveFlag
     */
    public Boolean getActiveFlag() {
        Boolean flag = false;
        if (this.getActiveYn() != null && this.getActiveYn().equalsIgnoreCase("Y")) {
            flag = true;
        } else {
            flag = false;
        }
        return flag;
//        return (String) getAttributeInternal(ACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ActiveFlag.
     * @param value value to set the  ActiveFlag
     */
    public void setActiveFlag(Boolean value) {
        if (value) {
            this.setActiveYn("Y");
        } else {
            this.setActiveYn("N");
        }
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CL_CODE_LOOKUP.
     */
    public RowSet getCL_CODE_LOOKUP() {
        return (RowSet)getAttributeInternal(CL_CODE_LOOKUP);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
