package custom.lease.model.Entity;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 08 21:13:55 IST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxplPropertyBuildingEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BuildId {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getBuildId();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setBuildId((Number)value);
            }
        }
        ,
        PropertyId {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getPropertyId();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setPropertyId((Number)value);
            }
        }
        ,
        BuildName {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getBuildName();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setBuildName((String)value);
            }
        }
        ,
        BuildNameTl {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getBuildNameTl();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setBuildNameTl((String)value);
            }
        }
        ,
        BuildNumber {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getBuildNumber();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setBuildNumber((String)value);
            }
        }
        ,
        BuildShortcode {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getBuildShortcode();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setBuildShortcode((String)value);
            }
        }
        ,
        ParentUnitId {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getParentUnitId();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setParentUnitId((Number)value);
            }
        }
        ,
        BuildType {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getBuildType();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setBuildType((String)value);
            }
        }
        ,
        BuildClass {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getBuildClass();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setBuildClass((String)value);
            }
        }
        ,
        BuildCategory {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getBuildCategory();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setBuildCategory((String)value);
            }
        }
        ,
        VendId {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getVendId();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setVendId((Number)value);
            }
        }
        ,
        Description {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getDescription();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        ActiveYn {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getActiveYn();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setActiveYn((String)value);
            }
        }
        ,
        FuncId {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getFuncId();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setFuncId((Number)value);
            }
        }
        ,
        LocationId {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getLocationId();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setLocationId((Number)value);
            }
        }
        ,
        SaleableYn {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getSaleableYn();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setSaleableYn((String)value);
            }
        }
        ,
        LeaseableYn {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getLeaseableYn();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setLeaseableYn((String)value);
            }
        }
        ,
        NoOfFloors {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getNoOfFloors();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setNoOfFloors((Number)value);
            }
        }
        ,
        AttributeCategory {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getAttributeCategory();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setAttributeCategory((String)value);
            }
        }
        ,
        Attribute1 {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getAttribute1();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getAttribute2();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getAttribute3();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getAttribute4();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getAttribute5();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        Attribute6 {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getAttribute6();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setAttribute6((String)value);
            }
        }
        ,
        Attribute7 {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getAttribute7();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setAttribute7((String)value);
            }
        }
        ,
        Attribute8 {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getAttribute8();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setAttribute8((String)value);
            }
        }
        ,
        Attribute9 {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getAttribute9();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setAttribute9((String)value);
            }
        }
        ,
        Attribute10 {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getAttribute10();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setAttribute10((String)value);
            }
        }
        ,
        ObjectVersion {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getObjectVersion();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setObjectVersion((Number)value);
            }
        }
        ,
        CreatedBy {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setCreationDate((Timestamp)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setLastUpdateDate((Timestamp)value);
            }
        }
        ,
        LastUpdateLogin {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getLastUpdateLogin();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setLastUpdateLogin((String)value);
            }
        }
        ,
        XxplPropertyAreaEo {
            public Object get(XxplPropertyBuildingEOImpl obj) {
                return obj.getXxplPropertyAreaEo();
            }

            public void put(XxplPropertyBuildingEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxplPropertyBuildingEOImpl object);

        public abstract void put(XxplPropertyBuildingEOImpl object,
                                 Object value);

        public int index() {
            return XxplPropertyBuildingEOImpl.AttributesEnum.firstIndex() +
                ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return XxplPropertyBuildingEOImpl.AttributesEnum.firstIndex() +
                XxplPropertyBuildingEOImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = XxplPropertyBuildingEOImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BUILDID = AttributesEnum.BuildId.index();
    public static final int PROPERTYID = AttributesEnum.PropertyId.index();
    public static final int BUILDNAME = AttributesEnum.BuildName.index();
    public static final int BUILDNAMETL = AttributesEnum.BuildNameTl.index();
    public static final int BUILDNUMBER = AttributesEnum.BuildNumber.index();
    public static final int BUILDSHORTCODE = AttributesEnum.BuildShortcode.index();
    public static final int PARENTUNITID = AttributesEnum.ParentUnitId.index();
    public static final int BUILDTYPE = AttributesEnum.BuildType.index();
    public static final int BUILDCLASS = AttributesEnum.BuildClass.index();
    public static final int BUILDCATEGORY = AttributesEnum.BuildCategory.index();
    public static final int VENDID = AttributesEnum.VendId.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int ACTIVEYN = AttributesEnum.ActiveYn.index();
    public static final int FUNCID = AttributesEnum.FuncId.index();
    public static final int LOCATIONID = AttributesEnum.LocationId.index();
    public static final int SALEABLEYN = AttributesEnum.SaleableYn.index();
    public static final int LEASEABLEYN = AttributesEnum.LeaseableYn.index();
    public static final int NOOFFLOORS = AttributesEnum.NoOfFloors.index();
    public static final int ATTRIBUTECATEGORY = AttributesEnum.AttributeCategory.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int OBJECTVERSION = AttributesEnum.ObjectVersion.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int XXPLPROPERTYAREAEO = AttributesEnum.XxplPropertyAreaEo.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxplPropertyBuildingEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("custom.lease.model.Entity.XxplPropertyBuildingEO");
    }

    /**
     * Gets the attribute value for BuildId, using the alias name BuildId.
     * @return the BuildId
     */
    public Number getBuildId() {
        return (Number)getAttributeInternal(BUILDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuildId.
     * @param value value to set the BuildId
     */
    public void setBuildId(Number value) {
        setAttributeInternal(BUILDID, value);
    }

    /**
     * Gets the attribute value for PropertyId, using the alias name PropertyId.
     * @return the PropertyId
     */
    public Number getPropertyId() {
        return (Number)getAttributeInternal(PROPERTYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyId.
     * @param value value to set the PropertyId
     */
    public void setPropertyId(Number value) {
        setAttributeInternal(PROPERTYID, value);
    }

    /**
     * Gets the attribute value for BuildName, using the alias name BuildName.
     * @return the BuildName
     */
    public String getBuildName() {
        return (String)getAttributeInternal(BUILDNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuildName.
     * @param value value to set the BuildName
     */
    public void setBuildName(String value) {
        setAttributeInternal(BUILDNAME, value);
    }

    /**
     * Gets the attribute value for BuildNameTl, using the alias name BuildNameTl.
     * @return the BuildNameTl
     */
    public String getBuildNameTl() {
        return (String)getAttributeInternal(BUILDNAMETL);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuildNameTl.
     * @param value value to set the BuildNameTl
     */
    public void setBuildNameTl(String value) {
        setAttributeInternal(BUILDNAMETL, value);
    }

    /**
     * Gets the attribute value for BuildNumber, using the alias name BuildNumber.
     * @return the BuildNumber
     */
    public String getBuildNumber() {
        return (String)getAttributeInternal(BUILDNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuildNumber.
     * @param value value to set the BuildNumber
     */
    public void setBuildNumber(String value) {
        setAttributeInternal(BUILDNUMBER, value);
    }

    /**
     * Gets the attribute value for BuildShortcode, using the alias name BuildShortcode.
     * @return the BuildShortcode
     */
    public String getBuildShortcode() {
        return (String)getAttributeInternal(BUILDSHORTCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuildShortcode.
     * @param value value to set the BuildShortcode
     */
    public void setBuildShortcode(String value) {
        setAttributeInternal(BUILDSHORTCODE, value);
    }

    /**
     * Gets the attribute value for ParentUnitId, using the alias name ParentUnitId.
     * @return the ParentUnitId
     */
    public Number getParentUnitId() {
        return (Number)getAttributeInternal(PARENTUNITID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParentUnitId.
     * @param value value to set the ParentUnitId
     */
    public void setParentUnitId(Number value) {
        setAttributeInternal(PARENTUNITID, value);
    }

    /**
     * Gets the attribute value for BuildType, using the alias name BuildType.
     * @return the BuildType
     */
    public String getBuildType() {
        return (String)getAttributeInternal(BUILDTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuildType.
     * @param value value to set the BuildType
     */
    public void setBuildType(String value) {
        setAttributeInternal(BUILDTYPE, value);
    }

    /**
     * Gets the attribute value for BuildClass, using the alias name BuildClass.
     * @return the BuildClass
     */
    public String getBuildClass() {
        return (String)getAttributeInternal(BUILDCLASS);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuildClass.
     * @param value value to set the BuildClass
     */
    public void setBuildClass(String value) {
        setAttributeInternal(BUILDCLASS, value);
    }

    /**
     * Gets the attribute value for BuildCategory, using the alias name BuildCategory.
     * @return the BuildCategory
     */
    public String getBuildCategory() {
        return (String)getAttributeInternal(BUILDCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuildCategory.
     * @param value value to set the BuildCategory
     */
    public void setBuildCategory(String value) {
        setAttributeInternal(BUILDCATEGORY, value);
    }

    /**
     * Gets the attribute value for VendId, using the alias name VendId.
     * @return the VendId
     */
    public Number getVendId() {
        return (Number)getAttributeInternal(VENDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for VendId.
     * @param value value to set the VendId
     */
    public void setVendId(Number value) {
        setAttributeInternal(VENDID, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for ActiveYn, using the alias name ActiveYn.
     * @return the ActiveYn
     */
    public String getActiveYn() {
        return (String)getAttributeInternal(ACTIVEYN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveYn.
     * @param value value to set the ActiveYn
     */
    public void setActiveYn(String value) {
        setAttributeInternal(ACTIVEYN, value);
    }

    /**
     * Gets the attribute value for FuncId, using the alias name FuncId.
     * @return the FuncId
     */
    public Number getFuncId() {
        return (Number)getAttributeInternal(FUNCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FuncId.
     * @param value value to set the FuncId
     */
    public void setFuncId(Number value) {
        setAttributeInternal(FUNCID, value);
    }

    /**
     * Gets the attribute value for LocationId, using the alias name LocationId.
     * @return the LocationId
     */
    public Number getLocationId() {
        return (Number)getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocationId.
     * @param value value to set the LocationId
     */
    public void setLocationId(Number value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for SaleableYn, using the alias name SaleableYn.
     * @return the SaleableYn
     */
    public String getSaleableYn() {
        return (String)getAttributeInternal(SALEABLEYN);
    }

    /**
     * Sets <code>value</code> as the attribute value for SaleableYn.
     * @param value value to set the SaleableYn
     */
    public void setSaleableYn(String value) {
        setAttributeInternal(SALEABLEYN, value);
    }

    /**
     * Gets the attribute value for LeaseableYn, using the alias name LeaseableYn.
     * @return the LeaseableYn
     */
    public String getLeaseableYn() {
        return (String)getAttributeInternal(LEASEABLEYN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LeaseableYn.
     * @param value value to set the LeaseableYn
     */
    public void setLeaseableYn(String value) {
        setAttributeInternal(LEASEABLEYN, value);
    }

    /**
     * Gets the attribute value for NoOfFloors, using the alias name NoOfFloors.
     * @return the NoOfFloors
     */
    public Number getNoOfFloors() {
        return (Number)getAttributeInternal(NOOFFLOORS);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoOfFloors.
     * @param value value to set the NoOfFloors
     */
    public void setNoOfFloors(Number value) {
        setAttributeInternal(NOOFFLOORS, value);
    }

    /**
     * Gets the attribute value for AttributeCategory, using the alias name AttributeCategory.
     * @return the AttributeCategory
     */
    public String getAttributeCategory() {
        return (String)getAttributeInternal(ATTRIBUTECATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeCategory.
     * @param value value to set the AttributeCategory
     */
    public void setAttributeCategory(String value) {
        setAttributeInternal(ATTRIBUTECATEGORY, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for Attribute6, using the alias name Attribute6.
     * @return the Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute6.
     * @param value value to set the Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for Attribute7, using the alias name Attribute7.
     * @return the Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute7.
     * @param value value to set the Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for Attribute8, using the alias name Attribute8.
     * @return the Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute8.
     * @param value value to set the Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for ObjectVersion, using the alias name ObjectVersion.
     * @return the ObjectVersion
     */
    public Number getObjectVersion() {
        return (Number)getAttributeInternal(OBJECTVERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for ObjectVersion.
     * @param value value to set the ObjectVersion
     */
    public void setObjectVersion(Number value) {
        setAttributeInternal(OBJECTVERSION, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the LastUpdateLogin
     */
    public String getLastUpdateLogin() {
        return (String)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateLogin.
     * @param value value to set the LastUpdateLogin
     */
    public void setLastUpdateLogin(String value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxplPropertyAreaEo() {
        return (RowIterator)getAttributeInternal(XXPLPROPERTYAREAEO);
    }


    /**
     * @param buildId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number buildId) {
        return new Key(new Object[]{buildId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {

        SequenceImpl seq =
            new SequenceImpl("BUILD_ID_S", this.getDBTransaction());

        this.setBuildId(seq.getSequenceNumber());

        this.setCreatedBy(ADFContext.getCurrent().getSessionScope().get("userName").toString());

        this.setLastUpdatedBy(ADFContext.getCurrent().getSessionScope().get("userName").toString());

        this.setLastUpdateLogin(ADFContext.getCurrent().getSessionScope().get("userName").toString());

        this.setCreationDate(new Timestamp(System.currentTimeMillis()));
        this.setLastUpdateDate(new Timestamp(System.currentTimeMillis()));
        //to add area
//        Row areaRow = getXxplPropertyAreaEo().createRow();
//        areaRow.setAttribute("Area", "CHARGE");
//        getXxplPropertyAreaEo().insertRow(areaRow);

        super.create(attributeList);

    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {

        if (operation == EntityImpl.DML_UPDATE) {

            this.setLastUpdatedBy(ADFContext.getCurrent().getSessionScope().get("userName").toString());

            this.setLastUpdateLogin(ADFContext.getCurrent().getSessionScope().get("userName").toString());

            this.setLastUpdateDate(new Timestamp(System.currentTimeMillis()));

        }

        super.doDML(operation, e);

    }
}
