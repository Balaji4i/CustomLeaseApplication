package custom.lease.model.Entity;

import custom.lease.model.View.XxplBookingHeader_VORowImpl;

import java.sql.Date;
import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 08 18:55:23 IST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxplLeaseInsurance_EOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        InsuranceId {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getInsuranceId();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setInsuranceId((Number)value);
            }
        }
        ,
        BookingId {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getBookingId();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setBookingId((Number)value);
            }
        }
        ,
        InsuranceType {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getInsuranceType();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setInsuranceType((String)value);
            }
        }
        ,
        InsuranceDate {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getInsuranceDate();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setInsuranceDate((Date)value);
            }
        }
        ,
        Amount {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getAmount();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setAmount((Number)value);
            }
        }
        ,
        ActiveYn {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getActiveYn();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setActiveYn((String)value);
            }
        }
        ,
        StartDate {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getStartDate();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setStartDate((Date)value);
            }
        }
        ,
        ExpirationDate {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getExpirationDate();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setExpirationDate((Date)value);
            }
        }
        ,
        CoverageAmountRequired {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getCoverageAmountRequired();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setCoverageAmountRequired((Number)value);
            }
        }
        ,
        CoverageAmountPurchased {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getCoverageAmountPurchased();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setCoverageAmountPurchased((Number)value);
            }
        }
        ,
        InsurancesCertificationNum {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getInsurancesCertificationNum();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setInsurancesCertificationNum((String)value);
            }
        }
        ,
        EnterableFields {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getEnterableFields();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setEnterableFields((String)value);
            }
        }
        ,
        InsStartDate {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getInsStartDate();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setInsStartDate((Date)value);
            }
        }
        ,
        InsEndDate {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getInsEndDate();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setInsEndDate((Date)value);
            }
        }
        ,
        Note {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getNote();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setNote((String)value);
            }
        }
        ,
        AttributeCategory {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getAttributeCategory();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setAttributeCategory((String)value);
            }
        }
        ,
        Attribute1 {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getAttribute1();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getAttribute2();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getAttribute3();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getAttribute4();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getAttribute5();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        Attribute6 {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getAttribute6();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setAttribute6((String)value);
            }
        }
        ,
        Attribute7 {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getAttribute7();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setAttribute7((String)value);
            }
        }
        ,
        Attribute8 {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getAttribute8();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setAttribute8((String)value);
            }
        }
        ,
        Attribute9 {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getAttribute9();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setAttribute9((String)value);
            }
        }
        ,
        Attribute10 {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getAttribute10();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setAttribute10((String)value);
            }
        }
        ,
        ObjectVersion {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getObjectVersion();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setObjectVersion((Number)value);
            }
        }
        ,
        CreatedBy {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setCreationDate((Timestamp)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setLastUpdateDate((Timestamp)value);
            }
        }
        ,
        LastUpdateLogin {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getLastUpdateLogin();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setLastUpdateLogin((String)value);
            }
        }
        ,
        RowID {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getRowID();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XxplBookingHeader_EO {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getXxplBookingHeader_EO();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setXxplBookingHeader_EO((XxplBookingHeader_EOImpl)value);
            }
        }
        ,
        XxplBookingHeader_VO {
            public Object get(XxplLeaseInsurance_EOImpl obj) {
                return obj.getXxplBookingHeader_VO();
            }

            public void put(XxplLeaseInsurance_EOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxplLeaseInsurance_EOImpl object);

        public abstract void put(XxplLeaseInsurance_EOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int INSURANCEID = AttributesEnum.InsuranceId.index();
    public static final int BOOKINGID = AttributesEnum.BookingId.index();
    public static final int INSURANCETYPE = AttributesEnum.InsuranceType.index();
    public static final int INSURANCEDATE = AttributesEnum.InsuranceDate.index();
    public static final int AMOUNT = AttributesEnum.Amount.index();
    public static final int ACTIVEYN = AttributesEnum.ActiveYn.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int EXPIRATIONDATE = AttributesEnum.ExpirationDate.index();
    public static final int COVERAGEAMOUNTREQUIRED = AttributesEnum.CoverageAmountRequired.index();
    public static final int COVERAGEAMOUNTPURCHASED = AttributesEnum.CoverageAmountPurchased.index();
    public static final int INSURANCESCERTIFICATIONNUM = AttributesEnum.InsurancesCertificationNum.index();
    public static final int ENTERABLEFIELDS = AttributesEnum.EnterableFields.index();
    public static final int INSSTARTDATE = AttributesEnum.InsStartDate.index();
    public static final int INSENDDATE = AttributesEnum.InsEndDate.index();
    public static final int NOTE = AttributesEnum.Note.index();
    public static final int ATTRIBUTECATEGORY = AttributesEnum.AttributeCategory.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int OBJECTVERSION = AttributesEnum.ObjectVersion.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int ROWID = AttributesEnum.RowID.index();
    public static final int XXPLBOOKINGHEADER_EO = AttributesEnum.XxplBookingHeader_EO.index();
    public static final int XXPLBOOKINGHEADER_VO = AttributesEnum.XxplBookingHeader_VO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxplLeaseInsurance_EOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("custom.lease.model.Entity.XxplLeaseInsurance_EO");
    }

    /**
     * Gets the attribute value for InsuranceId, using the alias name InsuranceId.
     * @return the InsuranceId
     */
    public Number getInsuranceId() {
        return (Number)getAttributeInternal(INSURANCEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsuranceId.
     * @param value value to set the InsuranceId
     */
    public void setInsuranceId(Number value) {
        setAttributeInternal(INSURANCEID, value);
    }

    /**
     * Gets the attribute value for BookingId, using the alias name BookingId.
     * @return the BookingId
     */
    public Number getBookingId() {
        return (Number)getAttributeInternal(BOOKINGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BookingId.
     * @param value value to set the BookingId
     */
    public void setBookingId(Number value) {
        setAttributeInternal(BOOKINGID, value);
    }

    /**
     * Gets the attribute value for InsuranceType, using the alias name InsuranceType.
     * @return the InsuranceType
     */
    public String getInsuranceType() {
        return (String)getAttributeInternal(INSURANCETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsuranceType.
     * @param value value to set the InsuranceType
     */
    public void setInsuranceType(String value) {
        setAttributeInternal(INSURANCETYPE, value);
    }

    /**
     * Gets the attribute value for InsuranceDate, using the alias name InsuranceDate.
     * @return the InsuranceDate
     */
    public Date getInsuranceDate() {
        return (Date)getAttributeInternal(INSURANCEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsuranceDate.
     * @param value value to set the InsuranceDate
     */
    public void setInsuranceDate(Date value) {
        setAttributeInternal(INSURANCEDATE, value);
    }

    /**
     * Gets the attribute value for Amount, using the alias name Amount.
     * @return the Amount
     */
    public Number getAmount() {
        return (Number)getAttributeInternal(AMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Amount.
     * @param value value to set the Amount
     */
    public void setAmount(Number value) {
        setAttributeInternal(AMOUNT, value);
    }

    /**
     * Gets the attribute value for ActiveYn, using the alias name ActiveYn.
     * @return the ActiveYn
     */
    public String getActiveYn() {
        return (String)getAttributeInternal(ACTIVEYN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveYn.
     * @param value value to set the ActiveYn
     */
    public void setActiveYn(String value) {
        setAttributeInternal(ACTIVEYN, value);
    }

    /**
     * Gets the attribute value for StartDate, using the alias name StartDate.
     * @return the StartDate
     */
    public Date getStartDate() {
        return (Date)getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartDate.
     * @param value value to set the StartDate
     */
    public void setStartDate(Date value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for ExpirationDate, using the alias name ExpirationDate.
     * @return the ExpirationDate
     */
    public Date getExpirationDate() {
        return (Date)getAttributeInternal(EXPIRATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExpirationDate.
     * @param value value to set the ExpirationDate
     */
    public void setExpirationDate(Date value) {
        setAttributeInternal(EXPIRATIONDATE, value);
    }

    /**
     * Gets the attribute value for CoverageAmountRequired, using the alias name CoverageAmountRequired.
     * @return the CoverageAmountRequired
     */
    public Number getCoverageAmountRequired() {
        return (Number)getAttributeInternal(COVERAGEAMOUNTREQUIRED);
    }

    /**
     * Sets <code>value</code> as the attribute value for CoverageAmountRequired.
     * @param value value to set the CoverageAmountRequired
     */
    public void setCoverageAmountRequired(Number value) {
        setAttributeInternal(COVERAGEAMOUNTREQUIRED, value);
    }

    /**
     * Gets the attribute value for CoverageAmountPurchased, using the alias name CoverageAmountPurchased.
     * @return the CoverageAmountPurchased
     */
    public Number getCoverageAmountPurchased() {
        return (Number)getAttributeInternal(COVERAGEAMOUNTPURCHASED);
    }

    /**
     * Sets <code>value</code> as the attribute value for CoverageAmountPurchased.
     * @param value value to set the CoverageAmountPurchased
     */
    public void setCoverageAmountPurchased(Number value) {
        setAttributeInternal(COVERAGEAMOUNTPURCHASED, value);
    }

    /**
     * Gets the attribute value for InsurancesCertificationNum, using the alias name InsurancesCertificationNum.
     * @return the InsurancesCertificationNum
     */
    public String getInsurancesCertificationNum() {
        return (String)getAttributeInternal(INSURANCESCERTIFICATIONNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsurancesCertificationNum.
     * @param value value to set the InsurancesCertificationNum
     */
    public void setInsurancesCertificationNum(String value) {
        setAttributeInternal(INSURANCESCERTIFICATIONNUM, value);
    }

    /**
     * Gets the attribute value for EnterableFields, using the alias name EnterableFields.
     * @return the EnterableFields
     */
    public String getEnterableFields() {
        return (String)getAttributeInternal(ENTERABLEFIELDS);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnterableFields.
     * @param value value to set the EnterableFields
     */
    public void setEnterableFields(String value) {
        setAttributeInternal(ENTERABLEFIELDS, value);
    }

    /**
     * Gets the attribute value for InsStartDate, using the alias name InsStartDate.
     * @return the InsStartDate
     */
    public Date getInsStartDate() {
        return (Date)getAttributeInternal(INSSTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsStartDate.
     * @param value value to set the InsStartDate
     */
    public void setInsStartDate(Date value) {
        setAttributeInternal(INSSTARTDATE, value);
    }

    /**
     * Gets the attribute value for InsEndDate, using the alias name InsEndDate.
     * @return the InsEndDate
     */
    public Date getInsEndDate() {
        return (Date)getAttributeInternal(INSENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsEndDate.
     * @param value value to set the InsEndDate
     */
    public void setInsEndDate(Date value) {
        setAttributeInternal(INSENDDATE, value);
    }

    /**
     * Gets the attribute value for Note, using the alias name Note.
     * @return the Note
     */
    public String getNote() {
        return (String)getAttributeInternal(NOTE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Note.
     * @param value value to set the Note
     */
    public void setNote(String value) {
        setAttributeInternal(NOTE, value);
    }

    /**
     * Gets the attribute value for AttributeCategory, using the alias name AttributeCategory.
     * @return the AttributeCategory
     */
    public String getAttributeCategory() {
        return (String)getAttributeInternal(ATTRIBUTECATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeCategory.
     * @param value value to set the AttributeCategory
     */
    public void setAttributeCategory(String value) {
        setAttributeInternal(ATTRIBUTECATEGORY, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for Attribute6, using the alias name Attribute6.
     * @return the Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute6.
     * @param value value to set the Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for Attribute7, using the alias name Attribute7.
     * @return the Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute7.
     * @param value value to set the Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for Attribute8, using the alias name Attribute8.
     * @return the Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute8.
     * @param value value to set the Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for ObjectVersion, using the alias name ObjectVersion.
     * @return the ObjectVersion
     */
    public Number getObjectVersion() {
        return (Number)getAttributeInternal(OBJECTVERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for ObjectVersion.
     * @param value value to set the ObjectVersion
     */
    public void setObjectVersion(Number value) {
        setAttributeInternal(OBJECTVERSION, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the LastUpdateLogin
     */
    public String getLastUpdateLogin() {
        return (String)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateLogin.
     * @param value value to set the LastUpdateLogin
     */
    public void setLastUpdateLogin(String value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for RowID, using the alias name RowID.
     * @return the RowID
     */
    public String getRowID() {
        return (String)getAttributeInternal(ROWID);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity XxplBookingHeader_EOImpl.
     */
    public XxplBookingHeader_EOImpl getXxplBookingHeader_EO() {
        return (XxplBookingHeader_EOImpl)getAttributeInternal(XXPLBOOKINGHEADER_EO);
    }

    /**
     * Sets <code>value</code> as the associated entity XxplBookingHeader_EOImpl.
     */
    public void setXxplBookingHeader_EO(XxplBookingHeader_EOImpl value) {
        setAttributeInternal(XXPLBOOKINGHEADER_EO, value);
    }

    /**
     * Uses the link Booking_VL_Insurances to return rows of XxplLeaseInsurance_View
     */
    public XxplBookingHeader_VORowImpl getXxplBookingHeader_VO() {
        return (XxplBookingHeader_VORowImpl)getAttributeInternal(XXPLBOOKINGHEADER_VO);
    }


    /**
     * @param insuranceId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number insuranceId) {
        return new Key(new Object[]{insuranceId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        SequenceImpl seq = new SequenceImpl("INSURANCE_ID_S", this.getDBTransaction());
        this.setInsuranceId(seq.getSequenceNumber());
        this.setCreatedBy(ADFContext.getCurrent().getSessionScope().get("userName").toString());
        this.setLastUpdatedBy(ADFContext.getCurrent().getSessionScope().get("userName").toString());
        this.setLastUpdateLogin(ADFContext.getCurrent().getSessionScope().get("userName").toString());
        this.setCreationDate(new Timestamp(System.currentTimeMillis()));
        this.setLastUpdateDate(new Timestamp(System.currentTimeMillis()));
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==EntityImpl.DML_UPDATE){
            this.setLastUpdatedBy(ADFContext.getCurrent().getSessionScope().get("userName").toString());
            this.setLastUpdateLogin(ADFContext.getCurrent().getSessionScope().get("userName").toString());
            this.setLastUpdateDate(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(operation, e);
    }
    
}
