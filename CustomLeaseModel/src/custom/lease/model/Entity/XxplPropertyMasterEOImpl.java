package custom.lease.model.Entity;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 08 02:35:20 IST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxplPropertyMasterEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        PropertyId {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getPropertyId();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setPropertyId((Number)value);
            }
        }
        ,
        PropertyName {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getPropertyName();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setPropertyName((String)value);
            }
        }
        ,
        PropertyNameTl {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getPropertyNameTl();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setPropertyNameTl((String)value);
            }
        }
        ,
        PropertyNumber {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getPropertyNumber();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setPropertyNumber((String)value);
            }
        }
        ,
        PropertyShortcode {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getPropertyShortcode();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setPropertyShortcode((String)value);
            }
        }
        ,
        FuncId {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getFuncId();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setFuncId((Number)value);
            }
        }
        ,
        OrgId {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setOrgId((Number)value);
            }
        }
        ,
        ProjectId {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getProjectId();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setProjectId((Number)value);
            }
        }
        ,
        CostCenterCode {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getCostCenterCode();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setCostCenterCode((String)value);
            }
        }
        ,
        LocationId {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getLocationId();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setLocationId((Number)value);
            }
        }
        ,
        PropertyType {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getPropertyType();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setPropertyType((String)value);
            }
        }
        ,
        NoOfUnits {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getNoOfUnits();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setNoOfUnits((Number)value);
            }
        }
        ,
        ParentPropertyId {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getParentPropertyId();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setParentPropertyId((Number)value);
            }
        }
        ,
        PropertyClass {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getPropertyClass();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setPropertyClass((String)value);
            }
        }
        ,
        PropertyCategory {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getPropertyCategory();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setPropertyCategory((String)value);
            }
        }
        ,
        VendId {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getVendId();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setVendId((Number)value);
            }
        }
        ,
        Description {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getDescription();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        ActiveYn {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getActiveYn();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setActiveYn((String)value);
            }
        }
        ,
        SaleableYn {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getSaleableYn();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setSaleableYn((String)value);
            }
        }
        ,
        LeaseableYn {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getLeaseableYn();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setLeaseableYn((String)value);
            }
        }
        ,
        AttributeCategory {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getAttributeCategory();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setAttributeCategory((String)value);
            }
        }
        ,
        Attribute1 {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getAttribute1();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getAttribute2();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getAttribute3();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getAttribute4();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getAttribute5();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        Attribute6 {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getAttribute6();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setAttribute6((String)value);
            }
        }
        ,
        Attribute7 {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getAttribute7();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setAttribute7((String)value);
            }
        }
        ,
        Attribute8 {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getAttribute8();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setAttribute8((String)value);
            }
        }
        ,
        Attribute9 {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getAttribute9();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setAttribute9((String)value);
            }
        }
        ,
        Attribute10 {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getAttribute10();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setAttribute10((String)value);
            }
        }
        ,
        ObjectVersion {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getObjectVersion();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setObjectVersion((Number)value);
            }
        }
        ,
        CreatedBy {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setCreationDate((Timestamp)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastUpdateLogin {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getLastUpdateLogin();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setLastUpdateLogin((String)value);
            }
        }
        ,
        RowID {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getRowID();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XxplPropertyAreaEo {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getXxplPropertyAreaEo();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        XxplPropertyMilestoneEO {
            public Object get(XxplPropertyMasterEOImpl obj) {
                return obj.getXxplPropertyMilestoneEO();
            }

            public void put(XxplPropertyMasterEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxplPropertyMasterEOImpl object);

        public abstract void put(XxplPropertyMasterEOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PROPERTYID = AttributesEnum.PropertyId.index();
    public static final int PROPERTYNAME = AttributesEnum.PropertyName.index();
    public static final int PROPERTYNAMETL = AttributesEnum.PropertyNameTl.index();
    public static final int PROPERTYNUMBER = AttributesEnum.PropertyNumber.index();
    public static final int PROPERTYSHORTCODE = AttributesEnum.PropertyShortcode.index();
    public static final int FUNCID = AttributesEnum.FuncId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int COSTCENTERCODE = AttributesEnum.CostCenterCode.index();
    public static final int LOCATIONID = AttributesEnum.LocationId.index();
    public static final int PROPERTYTYPE = AttributesEnum.PropertyType.index();
    public static final int NOOFUNITS = AttributesEnum.NoOfUnits.index();
    public static final int PARENTPROPERTYID = AttributesEnum.ParentPropertyId.index();
    public static final int PROPERTYCLASS = AttributesEnum.PropertyClass.index();
    public static final int PROPERTYCATEGORY = AttributesEnum.PropertyCategory.index();
    public static final int VENDID = AttributesEnum.VendId.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int ACTIVEYN = AttributesEnum.ActiveYn.index();
    public static final int SALEABLEYN = AttributesEnum.SaleableYn.index();
    public static final int LEASEABLEYN = AttributesEnum.LeaseableYn.index();
    public static final int ATTRIBUTECATEGORY = AttributesEnum.AttributeCategory.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int OBJECTVERSION = AttributesEnum.ObjectVersion.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int ROWID = AttributesEnum.RowID.index();
    public static final int XXPLPROPERTYAREAEO = AttributesEnum.XxplPropertyAreaEo.index();
    public static final int XXPLPROPERTYMILESTONEEO = AttributesEnum.XxplPropertyMilestoneEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxplPropertyMasterEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("custom.lease.model.Entity.XxplPropertyMasterEO");
    }

    /**
     * Gets the attribute value for PropertyId, using the alias name PropertyId.
     * @return the PropertyId
     */
    public Number getPropertyId() {
        return (Number)getAttributeInternal(PROPERTYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyId.
     * @param value value to set the PropertyId
     */
    public void setPropertyId(Number value) {
        setAttributeInternal(PROPERTYID, value);
    }

    /**
     * Gets the attribute value for PropertyName, using the alias name PropertyName.
     * @return the PropertyName
     */
    public String getPropertyName() {
        return (String)getAttributeInternal(PROPERTYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyName.
     * @param value value to set the PropertyName
     */
    public void setPropertyName(String value) {
        setAttributeInternal(PROPERTYNAME, value);
    }

    /**
     * Gets the attribute value for PropertyNameTl, using the alias name PropertyNameTl.
     * @return the PropertyNameTl
     */
    public String getPropertyNameTl() {
        return (String)getAttributeInternal(PROPERTYNAMETL);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyNameTl.
     * @param value value to set the PropertyNameTl
     */
    public void setPropertyNameTl(String value) {
        setAttributeInternal(PROPERTYNAMETL, value);
    }

    /**
     * Gets the attribute value for PropertyNumber, using the alias name PropertyNumber.
     * @return the PropertyNumber
     */
    public String getPropertyNumber() {
        return (String)getAttributeInternal(PROPERTYNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyNumber.
     * @param value value to set the PropertyNumber
     */
    public void setPropertyNumber(String value) {
        setAttributeInternal(PROPERTYNUMBER, value);
    }

    /**
     * Gets the attribute value for PropertyShortcode, using the alias name PropertyShortcode.
     * @return the PropertyShortcode
     */
    public String getPropertyShortcode() {
        return (String)getAttributeInternal(PROPERTYSHORTCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyShortcode.
     * @param value value to set the PropertyShortcode
     */
    public void setPropertyShortcode(String value) {
        setAttributeInternal(PROPERTYSHORTCODE, value);
    }

    /**
     * Gets the attribute value for FuncId, using the alias name FuncId.
     * @return the FuncId
     */
    public Number getFuncId() {
        return (Number)getAttributeInternal(FUNCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FuncId.
     * @param value value to set the FuncId
     */
    public void setFuncId(Number value) {
        setAttributeInternal(FUNCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the OrgId
     */
    public Number getOrgId() {
        return (Number)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(Number value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for ProjectId, using the alias name ProjectId.
     * @return the ProjectId
     */
    public Number getProjectId() {
        return (Number)getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProjectId.
     * @param value value to set the ProjectId
     */
    public void setProjectId(Number value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for CostCenterCode, using the alias name CostCenterCode.
     * @return the CostCenterCode
     */
    public String getCostCenterCode() {
        return (String)getAttributeInternal(COSTCENTERCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CostCenterCode.
     * @param value value to set the CostCenterCode
     */
    public void setCostCenterCode(String value) {
        setAttributeInternal(COSTCENTERCODE, value);
    }

    /**
     * Gets the attribute value for LocationId, using the alias name LocationId.
     * @return the LocationId
     */
    public Number getLocationId() {
        return (Number)getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocationId.
     * @param value value to set the LocationId
     */
    public void setLocationId(Number value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for PropertyType, using the alias name PropertyType.
     * @return the PropertyType
     */
    public String getPropertyType() {
        return (String)getAttributeInternal(PROPERTYTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyType.
     * @param value value to set the PropertyType
     */
    public void setPropertyType(String value) {
        setAttributeInternal(PROPERTYTYPE, value);
    }

    /**
     * Gets the attribute value for NoOfUnits, using the alias name NoOfUnits.
     * @return the NoOfUnits
     */
    public Number getNoOfUnits() {
        return (Number)getAttributeInternal(NOOFUNITS);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoOfUnits.
     * @param value value to set the NoOfUnits
     */
    public void setNoOfUnits(Number value) {
        setAttributeInternal(NOOFUNITS, value);
    }

    /**
     * Gets the attribute value for ParentPropertyId, using the alias name ParentPropertyId.
     * @return the ParentPropertyId
     */
    public Number getParentPropertyId() {
        return (Number)getAttributeInternal(PARENTPROPERTYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParentPropertyId.
     * @param value value to set the ParentPropertyId
     */
    public void setParentPropertyId(Number value) {
        setAttributeInternal(PARENTPROPERTYID, value);
    }

    /**
     * Gets the attribute value for PropertyClass, using the alias name PropertyClass.
     * @return the PropertyClass
     */
    public String getPropertyClass() {
        return (String)getAttributeInternal(PROPERTYCLASS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyClass.
     * @param value value to set the PropertyClass
     */
    public void setPropertyClass(String value) {
        setAttributeInternal(PROPERTYCLASS, value);
    }

    /**
     * Gets the attribute value for PropertyCategory, using the alias name PropertyCategory.
     * @return the PropertyCategory
     */
    public String getPropertyCategory() {
        return (String)getAttributeInternal(PROPERTYCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyCategory.
     * @param value value to set the PropertyCategory
     */
    public void setPropertyCategory(String value) {
        setAttributeInternal(PROPERTYCATEGORY, value);
    }

    /**
     * Gets the attribute value for VendId, using the alias name VendId.
     * @return the VendId
     */
    public Number getVendId() {
        return (Number)getAttributeInternal(VENDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for VendId.
     * @param value value to set the VendId
     */
    public void setVendId(Number value) {
        setAttributeInternal(VENDID, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for ActiveYn, using the alias name ActiveYn.
     * @return the ActiveYn
     */
    public String getActiveYn() {
        return (String)getAttributeInternal(ACTIVEYN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveYn.
     * @param value value to set the ActiveYn
     */
    public void setActiveYn(String value) {
        setAttributeInternal(ACTIVEYN, value);
    }

    /**
     * Gets the attribute value for SaleableYn, using the alias name SaleableYn.
     * @return the SaleableYn
     */
    public String getSaleableYn() {
        return (String)getAttributeInternal(SALEABLEYN);
    }

    /**
     * Sets <code>value</code> as the attribute value for SaleableYn.
     * @param value value to set the SaleableYn
     */
    public void setSaleableYn(String value) {
        setAttributeInternal(SALEABLEYN, value);
    }

    /**
     * Gets the attribute value for LeaseableYn, using the alias name LeaseableYn.
     * @return the LeaseableYn
     */
    public String getLeaseableYn() {
        return (String)getAttributeInternal(LEASEABLEYN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LeaseableYn.
     * @param value value to set the LeaseableYn
     */
    public void setLeaseableYn(String value) {
        setAttributeInternal(LEASEABLEYN, value);
    }

    /**
     * Gets the attribute value for AttributeCategory, using the alias name AttributeCategory.
     * @return the AttributeCategory
     */
    public String getAttributeCategory() {
        return (String)getAttributeInternal(ATTRIBUTECATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeCategory.
     * @param value value to set the AttributeCategory
     */
    public void setAttributeCategory(String value) {
        setAttributeInternal(ATTRIBUTECATEGORY, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for Attribute6, using the alias name Attribute6.
     * @return the Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute6.
     * @param value value to set the Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for Attribute7, using the alias name Attribute7.
     * @return the Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute7.
     * @param value value to set the Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for Attribute8, using the alias name Attribute8.
     * @return the Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute8.
     * @param value value to set the Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for ObjectVersion, using the alias name ObjectVersion.
     * @return the ObjectVersion
     */
    public Number getObjectVersion() {
        return (Number)getAttributeInternal(OBJECTVERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for ObjectVersion.
     * @param value value to set the ObjectVersion
     */
    public void setObjectVersion(Number value) {
        setAttributeInternal(OBJECTVERSION, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the LastUpdateLogin
     */
    public String getLastUpdateLogin() {
        return (String)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateLogin.
     * @param value value to set the LastUpdateLogin
     */
    public void setLastUpdateLogin(String value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for RowID, using the alias name RowID.
     * @return the RowID
     */
    public RowID getRowID() {
        return (RowID)getAttributeInternal(ROWID);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxplPropertyAreaEo() {
        return (RowIterator)getAttributeInternal(XXPLPROPERTYAREAEO);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxplPropertyMilestoneEO() {
        return (RowIterator)getAttributeInternal(XXPLPROPERTYMILESTONEEO);
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
      SequenceImpl seq = new SequenceImpl("property_id_S", this.getDBTransaction());
      this.setPropertyId(seq.getSequenceNumber());
      this.setCreatedBy(ADFContext.getCurrent().getSessionScope().get("userName").toString());
      this.setLastUpdatedBy(ADFContext.getCurrent().getSessionScope().get("userName").toString());
      this.setLastUpdateLogin(ADFContext.getCurrent().getSessionScope().get("userName").toString());
      this.setCreationDate(new Timestamp(System.currentTimeMillis()));       
      //to add area
//      Row areaRow = getXxplPropertyAreaEo().createRow();
//      areaRow.setAttribute("Area", "CHARGE");
//      getXxplPropertyAreaEo().insertRow(areaRow);     
      super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==EntityImpl.DML_UPDATE){
            this.setLastUpdatedBy(ADFContext.getCurrent().getSessionScope().get("userName").toString());
            this.setLastUpdateLogin(ADFContext.getCurrent().getSessionScope().get("userName").toString());
            this.setLastUpdateDate(new Timestamp(System.currentTimeMillis()));
        }
    super.doDML(operation, e);
    }
}
